package com.inossem.wms.dao.sinobec;

import com.inossem.wms.model.sinobec.SinobecStock;
import com.inossem.wms.model.sinobec.gp.SinobecBizOutputGp;
import com.inossem.wms.model.sinobec.stock.SinobecStockVo;
import com.inossem.wms.model.sinobec.task.BundleQueryCo;
import com.inossem.wms.vo.sinobec.SinobecBizInputVo;
import com.inossem.wms.vo.take.BizStockTakeItemVo;
import org.apache.ibatis.annotations.Param;

import java.math.BigDecimal;
import java.util.List;



public interface SinobecStockMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sinobec_stock
     *
     * @mbg.generated Mon Mar 23 20:45:33 CST 2020
     */
    int deleteByPrimaryKey(Integer stockId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sinobec_stock
     *
     * @mbg.generated Mon Mar 23 20:45:33 CST 2020
     */
    int insert(SinobecStock record);

    int insertAll(SinobecStock record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sinobec_stock
     *
     * @mbg.generated Mon Mar 23 20:45:33 CST 2020
     */
    int insertSelective(SinobecStock record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sinobec_stock
     *
     * @mbg.generated Mon Mar 23 20:45:33 CST 2020
     */
    SinobecStock selectByPrimaryKey(Integer stockId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sinobec_stock
     *
     * @mbg.generated Mon Mar 23 20:45:33 CST 2020
     */
    int updateByPrimaryKeySelective(SinobecStock record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sinobec_stock
     *
     * @mbg.generated Mon Mar 23 20:45:33 CST 2020
     */
    int updateByPrimaryKey(SinobecStock record);


    /**
     * 获取bundle信息
     * @param bundleCode
     * @return
     */
    List<SinobecStockVo> getBundleInfo(BundleQueryCo co);
    List<SinobecStockVo> getBundleInfoForSort(BundleQueryCo co);
    List<SinobecStockVo> searchBundleInfo(BundleQueryCo co);

    /**
     * 查询仓位信息
     * @param co
     * @return
     */
    List<SinobecStockVo> getBundleInfoOnPaging(BundleQueryCo co);
    List<SinobecStockVo> getBundleInfoOnPaging1(BundleQueryCo co);
    List<SinobecStockVo> getBundleInfoOnPagingTimeRange(BundleQueryCo co);


    /**
     *  匹配仓位库存，非冻结，非临时库存
     * @param gps
     * @return
     */
    List<SinobecStock> selectStockByGpOrder(@Param("gps") List<SinobecBizOutputGp> gps,@Param("defaltType") List<String> defaltType);
    List<SinobecStock> selectStockByGpOrder2(@Param("gps") List<SinobecBizOutputGp> gps,@Param("defaltType") List<String> defaltType,@Param("whCode") String whCode);

    List<SinobecStockVo> selectStockByBinCode(List<BizStockTakeItemVo> taskList);
    //BigDecimal selectStockSumByKey(@Param("sku") String sku,@Param("vin") String vin,@Param("eng") String eng,@Param("loc") List<String> loc);
    BigDecimal selectStockSumByKey(@Param("sku") String sku,@Param("vin") String vin,@Param("eng") String eng,@Param("type") List<String> type,@Param("bin") List<String> bin);


    List<SinobecStockVo> selectStockByKey(String whCode, String typeCode, String binCode, String bundleCode);

    int updateStockByKey(BigDecimal wQty, int stockId);

    int deleteStockByKey(int stockId);

    /**
     * 查询口罩库存
     * @param gps
     * @param defaltType
     * @return
     */
    List<SinobecStockVo> selectMaskStockByGpOrder(@Param("gps") List<SinobecBizOutputGp> gps);


    int PLinsert(SinobecStock record);

    int updateRemark(SinobecBizInputVo input);

    int updateStockByStockId(@Param("stockId")Integer stockId,@Param("bundleCode")String newBundleCode,@Param("typeCode")String typeCode,@Param("binCode")String binCode);
}
