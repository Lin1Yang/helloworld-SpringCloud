package com.inossem.wms.dao.sinobec;

import com.inossem.wms.model.sinobec.SinobecInsDocBin;
import com.inossem.wms.model.sinobec.SinobecInsDocBinKey;
import com.inossem.wms.model.sinobec.SinobecStock;
import com.inossem.wms.model.sinobec.query.InsDocInfoDaoVo;
import com.inossem.wms.model.sinobec.query.InsDocQueryCo;
import com.inossem.wms.vo.dic.DicWhStorageBinVo;

import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface SinobecInsDocBinMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sinobec_ins_doc_bin
	 *
	 * @mbg.generated Mon Mar 23 19:57:25 CST 2020
	 */
	int deleteByPrimaryKey(SinobecInsDocBinKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sinobec_ins_doc_bin
	 *
	 * @mbg.generated Mon Mar 23 19:57:25 CST 2020
	 */
	int insert(SinobecInsDocBin record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sinobec_ins_doc_bin
	 *
	 * @mbg.generated Mon Mar 23 19:57:25 CST 2020
	 */
	int insertSelective(SinobecInsDocBin record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sinobec_ins_doc_bin
	 *
	 * @mbg.generated Mon Mar 23 19:57:25 CST 2020
	 */
	SinobecInsDocBin selectByPrimaryKey(SinobecInsDocBinKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sinobec_ins_doc_bin
	 *
	 * @mbg.generated Mon Mar 23 19:57:25 CST 2020
	 */
	int updateByPrimaryKeySelective(SinobecInsDocBin record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table sinobec_ins_doc_bin
	 *
	 * @mbg.generated Mon Mar 23 19:57:25 CST 2020
	 */
	int updateByPrimaryKey(SinobecInsDocBin record);

	/**
	 * 批量插入或更新批次物料凭证
	 *
	 * @param list
	 * @return
	 */
	int insertOrUpdateList(List<SinobecInsDocBin> list);

	/**
	 * 根据凭证号修改库存
	 *
	 * @param insDocCode
	 * @return
	 */
	int modifyStock(@Param("insDocCode") String insDocCode);

	/**
	 * 根据凭证List修改库存
	 * @param list
	 * @return
	 */
	int modifyStockByList(@Param("list") List<SinobecInsDocBin> list);

	/**
	 * 新增库存
	 * @param list
	 * @return
	 */
	int addStockByBatch(@Param("list") List<SinobecInsDocBin> list);

	/**
	 * 删除数量为零的库存
	 *
	 * @param insDocCode
	 * @return
	 */
	int deleteStock(@Param("insDocCode") String insDocCode);

	/**
	 * 查询负库存
	 *
	 * @param insDocCode
	 * @return
	 */
	List<SinobecStock> selectNegativeStockAfterModifyStock(@Param("insDocCode") String insDocCode);

	/**
	 * 修改仓位当前载重
	 *
	 * @param insDocCode
	 * @return
	 */
	int modifyBinWeightQty(@Param("insDocCode") String insDocCode);

	/**
	 * 分页查询凭证
	 * @param co
	 * @return
	 */
	List<InsDocInfoDaoVo> QueryInsDocBinOnPaging(InsDocQueryCo co);

	/**
	 * 修改超重记录
	 * @param insDocCode
	 * @param binList
	 * @return
	 */
	int modifyOverWeightLog(@Param("insDocCode") String insDocCode ,@Param("binList")List<DicWhStorageBinVo> binList,@Param("overWeight")String overWeight);

	int deleteByReferReceiptCode(@Param("receiptCode") String referReceiptCode);

}
