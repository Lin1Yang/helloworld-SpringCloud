<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.sinobec.SinobecInsDocBinMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.sinobec.SinobecInsDocBin">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 19:57:25 CST 2020.
    -->
    <id column="ins_doc_code" jdbcType="VARCHAR" property="insDocCode" />
    <id column="ins_doc_rid" jdbcType="VARCHAR" property="insDocRid" />
    <result column="mat_code" jdbcType="VARCHAR" property="matCode" />
    <result column="bundle_code" jdbcType="VARCHAR" property="bundleCode" />
    <result column="shipping_ref" jdbcType="VARCHAR" property="shippingRef" />
    <result column="heat_code" jdbcType="VARCHAR" property="heatCode" />
    <result column="skid_code" jdbcType="VARCHAR" property="skidCode" />
    <result column="corp_code" jdbcType="VARCHAR" property="corpCode" />
    <result column="item_numb" jdbcType="VARCHAR" property="itemNumb" />
    <result column="lot_numb" jdbcType="VARCHAR" property="lotNumb" />
    <result column="wh_code" jdbcType="VARCHAR" property="whCode" />
    <result column="type_code" jdbcType="VARCHAR" property="typeCode" />
    <result column="bin_code" jdbcType="VARCHAR" property="binCode" />
    <result column="receipt_unit_code" jdbcType="VARCHAR" property="receiptUnitCode" />
    <result column="receipt_qty" jdbcType="DECIMAL" property="receiptQty" />
    <result column="weight_unit_code" jdbcType="VARCHAR" property="weightUnitCode" />
    <result column="weight_qty" jdbcType="DECIMAL" property="weightQty" />
    <result column="bin_weight_unit_code" jdbcType="VARCHAR" property="binWeightUnitCode" />
    <result column="bin_weight_qty" jdbcType="DECIMAL" property="binWeightQty" />
    <result column="stock_status" jdbcType="VARCHAR" property="stockStatus" />
    <result column="debit_credit" jdbcType="VARCHAR" property="debitCredit" />
    <result column="refer_receipt_code" jdbcType="VARCHAR" property="referReceiptCode" />
    <result column="refer_receipt_rid" jdbcType="VARCHAR" property="referReceiptRid" />
    <result column="refer_receipt_bid" jdbcType="VARCHAR" property="referReceiptBid" />
    <result column="refer_receipt_type" jdbcType="INTEGER" property="referReceiptType" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="write_off" jdbcType="TINYINT" property="writeOff" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="modify_user_id" jdbcType="INTEGER" property="modifyUserId" />
    <result column="corp_name" jdbcType="VARCHAR" property="corpName" />
    <result column="ext0" jdbcType="VARCHAR" property="ext0" />
    <result column="ext1" jdbcType="VARCHAR" property="ext1" />
    <result column="ext2" jdbcType="VARCHAR" property="ext2" />

  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 19:57:25 CST 2020.
    -->
    ins_doc_code, ins_doc_rid, mat_code, bundle_code, shipping_ref, heat_code, skid_code,
    corp_code, item_numb, lot_numb, wh_code, type_code, bin_code, receipt_unit_code,
    receipt_qty, weight_unit_code, weight_qty, bin_weight_unit_code, bin_weight_qty,
    stock_status, debit_credit, refer_receipt_code, refer_receipt_rid, refer_receipt_bid,
    refer_receipt_type, is_delete, write_off, create_time, modify_time, create_user_id,
    modify_user_id,vendor_code,vendor_name,ext0,ext1,ext2
  </sql>
  <sql id="Base_Column_List_qeury">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 19:57:25 CST 2020.
    -->
    sidb.ins_doc_code, sidb.ins_doc_rid, sidb.mat_code, sidb.bundle_code, sidb.shipping_ref, sidb.heat_code, sidb.skid_code,
    sidb.corp_code, sidb.item_numb, sidb.lot_numb, sidb.wh_code, sidb.type_code, sidb.bin_code, sidb.receipt_unit_code,
    sidb.receipt_qty, sidb.weight_unit_code, sidb.weight_qty, sidb.bin_weight_unit_code, sidb.bin_weight_qty,
    sidb.stock_status, sidb.debit_credit, sidb.refer_receipt_code, sidb.refer_receipt_rid, sidb.refer_receipt_bid,
    sidb.refer_receipt_type, sidb.is_delete, write_off, sidb.create_time, sidb.modify_time, sidb.create_user_id,
    sidb.modify_user_id,corp.corp_name,
    sidb.ext0,sidb.ext1,sidb.ext2
  </sql>

  <select id="selectByPrimaryKey" parameterType="com.inossem.wms.model.sinobec.SinobecInsDocBinKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 19:57:25 CST 2020.
    -->
    select
    <include refid="Base_Column_List" />
    from sinobec_ins_doc_bin
    where ins_doc_code = #{insDocCode,jdbcType=VARCHAR}
      and ins_doc_rid = #{insDocRid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.inossem.wms.model.sinobec.SinobecInsDocBinKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 19:57:25 CST 2020.
    -->
    delete from sinobec_ins_doc_bin
    where ins_doc_code = #{insDocCode,jdbcType=VARCHAR}
      and ins_doc_rid = #{insDocRid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.inossem.wms.model.sinobec.SinobecInsDocBin">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 19:57:25 CST 2020.
    -->
    insert into sinobec_ins_doc_bin (ins_doc_code, ins_doc_rid, mat_code,
      bundle_code, shipping_ref, heat_code,
      skid_code, corp_code, item_numb,
      lot_numb, wh_code, type_code,
      bin_code, receipt_unit_code, receipt_qty,
      weight_unit_code, weight_qty, bin_weight_unit_code,
      bin_weight_qty, stock_status, debit_credit,
      refer_receipt_code, refer_receipt_rid, refer_receipt_bid,
      refer_receipt_type, is_delete, write_off,
      create_time, modify_time, create_user_id,
      modify_user_id,
      vendor_code,vendor_name
      )
    values (#{insDocCode,jdbcType=VARCHAR}, #{insDocRid,jdbcType=VARCHAR}, #{matCode,jdbcType=VARCHAR},
      #{bundleCode,jdbcType=VARCHAR}, #{shippingRef,jdbcType=VARCHAR}, #{heatCode,jdbcType=VARCHAR},
      #{skidCode,jdbcType=VARCHAR}, #{corpCode,jdbcType=VARCHAR}, #{itemNumb,jdbcType=VARCHAR},
      #{lotNumb,jdbcType=VARCHAR}, #{whCode,jdbcType=VARCHAR}, #{typeCode,jdbcType=VARCHAR},
      #{binCode,jdbcType=VARCHAR}, #{receiptUnitCode,jdbcType=VARCHAR}, #{receiptQty,jdbcType=DECIMAL},
      #{weightUnitCode,jdbcType=VARCHAR}, #{weightQty,jdbcType=DECIMAL}, #{binWeightUnitCode,jdbcType=VARCHAR},
      #{binWeightQty,jdbcType=DECIMAL}, #{stockStatus,jdbcType=VARCHAR}, #{debitCredit,jdbcType=VARCHAR},
      #{referReceiptCode,jdbcType=VARCHAR}, #{referReceiptRid,jdbcType=VARCHAR}, #{referReceiptBid,jdbcType=VARCHAR},
      #{referReceiptType,jdbcType=INTEGER}, #{isDelete,jdbcType=TINYINT}, #{writeOff,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER},
      #{modifyUserId,jdbcType=INTEGER},
      #{item.vendorCode,jdbcType=VARCHAR},#{item.vendorName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.inossem.wms.model.sinobec.SinobecInsDocBin">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 19:57:25 CST 2020.
    -->
    insert into sinobec_ins_doc_bin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="insDocCode != null">
        ins_doc_code,
      </if>
      <if test="insDocRid != null">
        ins_doc_rid,
      </if>
      <if test="matCode != null">
        mat_code,
      </if>
      <if test="bundleCode != null">
        bundle_code,
      </if>
      <if test="shippingRef != null">
        shipping_ref,
      </if>
      <if test="heatCode != null">
        heat_code,
      </if>
      <if test="skidCode != null">
        skid_code,
      </if>
      <if test="corpCode != null">
        corp_code,
      </if>
      <if test="itemNumb != null">
        item_numb,
      </if>
      <if test="lotNumb != null">
        lot_numb,
      </if>
      <if test="whCode != null">
        wh_code,
      </if>
      <if test="typeCode != null">
        type_code,
      </if>
      <if test="binCode != null">
        bin_code,
      </if>
      <if test="receiptUnitCode != null">
        receipt_unit_code,
      </if>
      <if test="receiptQty != null">
        receipt_qty,
      </if>
      <if test="weightUnitCode != null">
        weight_unit_code,
      </if>
      <if test="weightQty != null">
        weight_qty,
      </if>
      <if test="binWeightUnitCode != null">
        bin_weight_unit_code,
      </if>
      <if test="binWeightQty != null">
        bin_weight_qty,
      </if>
      <if test="stockStatus != null">
        stock_status,
      </if>
      <if test="debitCredit != null">
        debit_credit,
      </if>
      <if test="referReceiptCode != null">
        refer_receipt_code,
      </if>
      <if test="referReceiptRid != null">
        refer_receipt_rid,
      </if>
      <if test="referReceiptBid != null">
        refer_receipt_bid,
      </if>
      <if test="referReceiptType != null">
        refer_receipt_type,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="writeOff != null">
        write_off,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="modifyUserId != null">
        modify_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="insDocCode != null">
        #{insDocCode,jdbcType=VARCHAR},
      </if>
      <if test="insDocRid != null">
        #{insDocRid,jdbcType=VARCHAR},
      </if>
      <if test="matCode != null">
        #{matCode,jdbcType=VARCHAR},
      </if>
      <if test="bundleCode != null">
        #{bundleCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingRef != null">
        #{shippingRef,jdbcType=VARCHAR},
      </if>
      <if test="heatCode != null">
        #{heatCode,jdbcType=VARCHAR},
      </if>
      <if test="skidCode != null">
        #{skidCode,jdbcType=VARCHAR},
      </if>
      <if test="corpCode != null">
        #{corpCode,jdbcType=VARCHAR},
      </if>
      <if test="itemNumb != null">
        #{itemNumb,jdbcType=VARCHAR},
      </if>
      <if test="lotNumb != null">
        #{lotNumb,jdbcType=VARCHAR},
      </if>
      <if test="whCode != null">
        #{whCode,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="binCode != null">
        #{binCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptUnitCode != null">
        #{receiptUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptQty != null">
        #{receiptQty,jdbcType=DECIMAL},
      </if>
      <if test="weightUnitCode != null">
        #{weightUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="weightQty != null">
        #{weightQty,jdbcType=DECIMAL},
      </if>
      <if test="binWeightUnitCode != null">
        #{binWeightUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="binWeightQty != null">
        #{binWeightQty,jdbcType=DECIMAL},
      </if>
      <if test="stockStatus != null">
        #{stockStatus,jdbcType=VARCHAR},
      </if>
      <if test="debitCredit != null">
        #{debitCredit,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptCode != null">
        #{referReceiptCode,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptRid != null">
        #{referReceiptRid,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptBid != null">
        #{referReceiptBid,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptType != null">
        #{referReceiptType,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="writeOff != null">
        #{writeOff,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyUserId != null">
        #{modifyUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.sinobec.SinobecInsDocBin">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 19:57:25 CST 2020.
    -->
    update sinobec_ins_doc_bin
    <set>
      <if test="matCode != null">
        mat_code = #{matCode,jdbcType=VARCHAR},
      </if>
      <if test="bundleCode != null">
        bundle_code = #{bundleCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingRef != null">
        shipping_ref = #{shippingRef,jdbcType=VARCHAR},
      </if>
      <if test="heatCode != null">
        heat_code = #{heatCode,jdbcType=VARCHAR},
      </if>
      <if test="skidCode != null">
        skid_code = #{skidCode,jdbcType=VARCHAR},
      </if>
      <if test="corpCode != null">
        corp_code = #{corpCode,jdbcType=VARCHAR},
      </if>
      <if test="itemNumb != null">
        item_numb = #{itemNumb,jdbcType=VARCHAR},
      </if>
      <if test="lotNumb != null">
        lot_numb = #{lotNumb,jdbcType=VARCHAR},
      </if>
      <if test="whCode != null">
        wh_code = #{whCode,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="binCode != null">
        bin_code = #{binCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptUnitCode != null">
        receipt_unit_code = #{receiptUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptQty != null">
        receipt_qty = #{receiptQty,jdbcType=DECIMAL},
      </if>
      <if test="weightUnitCode != null">
        weight_unit_code = #{weightUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="weightQty != null">
        weight_qty = #{weightQty,jdbcType=DECIMAL},
      </if>
      <if test="binWeightUnitCode != null">
        bin_weight_unit_code = #{binWeightUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="binWeightQty != null">
        bin_weight_qty = #{binWeightQty,jdbcType=DECIMAL},
      </if>
      <if test="stockStatus != null">
        stock_status = #{stockStatus,jdbcType=VARCHAR},
      </if>
      <if test="debitCredit != null">
        debit_credit = #{debitCredit,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptCode != null">
        refer_receipt_code = #{referReceiptCode,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptRid != null">
        refer_receipt_rid = #{referReceiptRid,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptBid != null">
        refer_receipt_bid = #{referReceiptBid,jdbcType=VARCHAR},
      </if>
      <if test="referReceiptType != null">
        refer_receipt_type = #{referReceiptType,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="writeOff != null">
        write_off = #{writeOff,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyUserId != null">
        modify_user_id = #{modifyUserId,jdbcType=INTEGER},
      </if>
    </set>
    where ins_doc_code = #{insDocCode,jdbcType=VARCHAR}
      and ins_doc_rid = #{insDocRid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.sinobec.SinobecInsDocBin">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 19:57:25 CST 2020.
    -->
    update sinobec_ins_doc_bin
    set mat_code = #{matCode,jdbcType=VARCHAR},
      bundle_code = #{bundleCode,jdbcType=VARCHAR},
      shipping_ref = #{shippingRef,jdbcType=VARCHAR},
      heat_code = #{heatCode,jdbcType=VARCHAR},
      skid_code = #{skidCode,jdbcType=VARCHAR},
      corp_code = #{corpCode,jdbcType=VARCHAR},
      item_numb = #{itemNumb,jdbcType=VARCHAR},
      lot_numb = #{lotNumb,jdbcType=VARCHAR},
      wh_code = #{whCode,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      bin_code = #{binCode,jdbcType=VARCHAR},
      receipt_unit_code = #{receiptUnitCode,jdbcType=VARCHAR},
      receipt_qty = #{receiptQty,jdbcType=DECIMAL},
      weight_unit_code = #{weightUnitCode,jdbcType=VARCHAR},
      weight_qty = #{weightQty,jdbcType=DECIMAL},
      bin_weight_unit_code = #{binWeightUnitCode,jdbcType=VARCHAR},
      bin_weight_qty = #{binWeightQty,jdbcType=DECIMAL},
      stock_status = #{stockStatus,jdbcType=VARCHAR},
      debit_credit = #{debitCredit,jdbcType=VARCHAR},
      refer_receipt_code = #{referReceiptCode,jdbcType=VARCHAR},
      refer_receipt_rid = #{referReceiptRid,jdbcType=VARCHAR},
      refer_receipt_bid = #{referReceiptBid,jdbcType=VARCHAR},
      refer_receipt_type = #{referReceiptType,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      write_off = #{writeOff,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      modify_user_id = #{modifyUserId,jdbcType=INTEGER}
    where ins_doc_code = #{insDocCode,jdbcType=VARCHAR}
      and ins_doc_rid = #{insDocRid,jdbcType=VARCHAR}
  </update>

  <insert id="insertOrUpdateList" parameterType="java.util.List">
    <!-- 批量插入ins凭证 -->
    insert into sinobec_ins_doc_bin (ins_doc_code, ins_doc_rid, mat_code,
      bundle_code, shipping_ref, heat_code,
      skid_code, corp_code, item_numb,
      lot_numb, wh_code, type_code,
      bin_code, receipt_unit_code, receipt_qty,
      weight_unit_code, weight_qty, bin_weight_unit_code,
      bin_weight_qty, stock_status, debit_credit,
      refer_receipt_code, refer_receipt_rid, refer_receipt_bid,
      refer_receipt_type, write_off,
      create_user_id,
      modify_user_id,stock_id,
      ext0,ext1,ext2,ext3,ext4,ext5,ext6,ext7,ext8,ext9,ext10,ext11,ext12,ext13,ext14,ext15)
    values
    <foreach collection="list" open="" close="" separator="," item="item">
    (#{item.insDocCode,jdbcType=VARCHAR}, #{item.insDocRid,jdbcType=VARCHAR}, #{item.matCode,jdbcType=VARCHAR},
      #{item.bundleCode,jdbcType=VARCHAR}, #{item.shippingRef,jdbcType=VARCHAR}, #{item.heatCode,jdbcType=VARCHAR},
      #{item.skidCode,jdbcType=VARCHAR},
      ifnull(#{item.corpCode,jdbcType=VARCHAR},''),
      ifnull(#{item.itemNumb,jdbcType=VARCHAR}, ''),
      ifnull(#{item.lotNumb,jdbcType=VARCHAR}, ''),
      ifnull(#{item.whCode,jdbcType=VARCHAR}, ''),
      ifnull(#{item.typeCode,jdbcType=VARCHAR}, ''),
      ifnull(#{item.binCode,jdbcType=VARCHAR}, ''),
      ifnull(#{item.receiptUnitCode,jdbcType=VARCHAR}, ''),
      ifnull(#{item.receiptQty,jdbcType=DECIMAL}, 0),
      ifnull(#{item.weightUnitCode,jdbcType=VARCHAR}, ''),
      ifnull(#{item.weightQty,jdbcType=DECIMAL}, 0),
      ifnull(#{item.binWeightUnitCode,jdbcType=VARCHAR}, ''),
      ifnull(#{item.binWeightQty,jdbcType=DECIMAL}, 0),
      ifnull(#{item.stockStatus,jdbcType=VARCHAR}, ''),
      ifnull(#{item.debitCredit,jdbcType=VARCHAR}, ''),
      ifnull(#{item.referReceiptCode,jdbcType=VARCHAR}, ''),
      ifnull(#{item.referReceiptRid,jdbcType=VARCHAR}, ''),
      ifnull(#{item.referReceiptBid,jdbcType=VARCHAR}, ''),
      ifnull(#{item.referReceiptType,jdbcType=INTEGER}, 0),
      ifnull(#{item.writeOff,jdbcType=TINYINT}, 0),
      ifnull(#{item.createUserId,jdbcType=INTEGER}, 0),
      ifnull(#{item.modifyUserId,jdbcType=INTEGER},0),
      ifnull(#{item.stockId,jdbcType=INTEGER} ,''),
      ifnull(#{item.ext0,jdbcType=VARCHAR}, ''),
      ifnull(#{item.ext1,jdbcType=VARCHAR}, ''),
      ifnull(#{item.ext2,jdbcType=VARCHAR}, ''),
      ifnull(#{item.ext3,jdbcType=VARCHAR}, ''),
      ifnull(#{item.ext4,jdbcType=VARCHAR}, ''),
      ifnull(#{item.ext5,jdbcType=VARCHAR}, ''),
      ifnull(#{item.ext6,jdbcType=VARCHAR}, ''),
      ifnull(#{item.ext7,jdbcType=VARCHAR}, ''),
      ifnull(#{item.ext8,jdbcType=VARCHAR}, ''),
      ifnull(#{item.ext9,jdbcType=VARCHAR}, ''),
      ifnull(#{item.ext10,jdbcType=VARCHAR},''),
      ifnull(#{item.ext11,jdbcType=VARCHAR},''),
      ifnull(#{item.ext12,jdbcType=VARCHAR},''),
      ifnull(#{item.ext13,jdbcType=VARCHAR},''),
      ifnull(#{item.ext14,jdbcType=VARCHAR},''),
      ifnull(#{item.ext15,jdbcType=VARCHAR},'')
      )
    </foreach>
    ON  DUPLICATE  KEY  UPDATE
      mat_code = values(mat_code),
      bundle_code = values(bundle_code),
      shipping_ref = values(shipping_ref),
      heat_code = values(heat_code),
      skid_code = values(skid_code),
      corp_code = values(corp_code),
      item_numb = values(item_numb),
      lot_numb = values(lot_numb),
      wh_code = values(wh_code),
      type_code = values(type_code),
      bin_code = values(bin_code),
      receipt_unit_code = values(receipt_unit_code),
      receipt_qty = values(receipt_qty),
      weight_unit_code = values(weight_unit_code),
      weight_qty = values(weight_qty),
      bin_weight_unit_code = values(bin_weight_unit_code),
      bin_weight_qty = values(bin_weight_qty),
      stock_status = values(stock_status),
	  debit_credit = values(debit_credit),
	  refer_receipt_code = values(refer_receipt_code),
	  refer_receipt_rid = values(refer_receipt_rid),
	  refer_receipt_bid = values(refer_receipt_bid),
	  refer_receipt_type = values(refer_receipt_type),
	  is_delete = values(is_delete),
	  write_off = values(write_off),
	  create_user_id = values(create_user_id),
	  modify_user_id = values(modify_user_id),
	  stock_id = values(stock_id),
	  ext0=values(ext0),
	  ext1=values(ext1),
	  ext2=values(ext2),
	  ext3=values(ext3),
	  ext4=values(ext4),
	  ext5=values(ext5),
	  ext6=values(ext6),
	  ext7=values(ext7),
	  ext8=values(ext8),
	  ext9=values(ext9),
	  ext10=values(ext10),
	  ext11=values(ext11),
	  ext12=values(ext12),
	  ext13=values(ext13),
	  ext14=values(ext14),
	  ext15=values(ext15)
  </insert>
  <!-- 根据ins凭证号修改库存 -->
  <update id="modifyStock" >
	INSERT INTO sinobec_stock (
		stock_id,
		bundle_code, shipping_ref,
      	wh_code, type_code, bin_code,
      	weight_unit_code, weight_qty,
      	receipt_unit_code, receipt_qty,
      	create_user_id, modify_user_id
	) SELECT
		(CASE stock_id <![CDATA[>]]> 0
		WHEN 1 THEN stock_id
		ELSE NULL
		END ),
		bundle_code, shipping_ref,
	    wh_code, type_code, bin_code,
		weight_unit_code,
		(CASE debit_credit
		WHEN 's' THEN 1
		ELSE - 1
		END ) * weight_qty,
		receipt_unit_code,
		(CASE debit_credit
		WHEN 's' THEN 1
		ELSE - 1
		END ) * receipt_qty,
		create_user_id, modify_user_id
	FROM
		sinobec_ins_doc_bin
	WHERE
		ins_doc_code = #{insDocCode}
	ON DUPLICATE KEY UPDATE
		sinobec_stock.weight_qty = sinobec_stock.weight_qty +VALUES (weight_qty),
		sinobec_stock.receipt_qty = sinobec_stock.receipt_qty +VALUES (receipt_qty)
  </update>


  <!-- 根据ins凭证List修改库存 -->
  <insert id="modifyStockByList" useGeneratedKeys="true" keyProperty="stockId">
	INSERT INTO sinobec_stock (
		stock_id,
		bundle_code, shipping_ref,
      	wh_code, type_code, bin_code,
      	weight_unit_code, weight_qty,
      	receipt_unit_code, receipt_qty,
      	create_user_id, modify_user_id,
      	ext0,ext1,ext2
	) SELECT
		(CASE stock_id <![CDATA[>]]> 0
		WHEN 1 THEN stock_id
		ELSE NULL
		END ),
		bundle_code, shipping_ref,
	    wh_code, type_code, bin_code,
		weight_unit_code,
		(CASE debit_credit
		WHEN 's' THEN 1
		ELSE - 1
		END ) * weight_qty,
		receipt_unit_code,
		(CASE debit_credit
		WHEN 's' THEN 1
		ELSE - 1
		END ) * receipt_qty,
		create_user_id, modify_user_id,
		ext0,ext1,ext2
	FROM
		(
			<foreach collection="list" item="item" index="index" separator="UNION ALL">
						SELECT
						#{item.stockId} stock_id,
						#{item.bundleCode} bundle_code,
						#{item.shippingRef} shipping_ref,
						#{item.whCode} wh_code,
						#{item.typeCode} type_code,
						#{item.binCode} bin_code,
						#{item.weightUnitCode} weight_unit_code,
						#{item.receiptUnitCode} receipt_unit_code,
						#{item.receiptQty} receipt_qty,
						#{item.weightQty} weight_qty,
						#{item.debitCredit} debit_credit,
						#{item.createUserId} create_user_id,
						#{item.modifyUserId} modify_user_id,
						#{item.ext0} ext0,
						#{item.ext1} ext1,
						#{item.ext2} ext2

			</foreach>
		) a
	ON DUPLICATE KEY UPDATE
		sinobec_stock.weight_qty = sinobec_stock.weight_qty +VALUES (weight_qty),
		sinobec_stock.receipt_qty = sinobec_stock.receipt_qty +VALUES (receipt_qty)
  </insert>

  <insert id="addStockByBatch" useGeneratedKeys="true" keyProperty="stockId">
	INSERT INTO sinobec_stock (
		stock_id,
		bundle_code, shipping_ref,
      	wh_code, type_code, bin_code,
      	weight_unit_code, weight_qty,
      	receipt_unit_code, receipt_qty,
      	create_user_id, modify_user_id,
      	ext0,ext1,ext2,ext3,ext4,ext5,ext6,ext7,ext8,ext9,ext10,ext11,ext12,ext13,ext14,ext15
	) values
			<foreach collection="list" item="item" index="index" separator="," open="" close="">
					(
						#{item.stockId} ,
						#{item.bundleCode} ,
						#{item.shippingRef} ,
						#{item.whCode} ,
						#{item.typeCode} ,
						#{item.binCode} ,
						#{item.weightUnitCode} ,
						#{item.weightQty} ,
						#{item.receiptUnitCode} ,
						#{item.receiptQty} ,
						#{item.createUserId} ,
						#{item.modifyUserId} ,
						#{item.ext0} ,
						#{item.ext1} ,
						#{item.ext2} ,
						#{item.ext3} ,
						#{item.ext4} ,
						#{item.ext5} ,
						#{item.ext6} ,
						#{item.ext7} ,
						#{item.ext8} ,
						#{item.ext9} ,
						#{item.ext10} ,
						#{item.ext11} ,
						#{item.ext12} ,
						#{item.ext13} ,
						#{item.ext14} ,
						#{item.ext15}
					)
			</foreach>

  </insert>

  <!-- 删除所有库存数量都为0的数据 -->
  <delete id="deleteStock">
	DELETE b FROM (
		SELECT
			stock_id
		FROM
			sinobec_ins_doc_bin
		WHERE
			ins_doc_code = #{insDocCode}
		) a
	INNER JOIN sinobec_stock b ON a.stock_id = b.stock_id
	AND b.weight_qty = 0
  </delete>
  <!-- 查询负库存 -->
  <select id="selectNegativeStockAfterModifyStock" resultType="com.inossem.wms.model.sinobec.SinobecStock">
	SELECT
		b.bundle_code,
		b.shipping_ref,
		b.wh_code,
		b.type_code,
		b.bin_code,
		b.weight_qty
	FROM
		sinobec_stock b
	INNER JOIN sinobec_ins_doc_bin a ON a.ins_doc_code = #{insDocCode}
	AND a.stock_id = b.stock_id
	AND b.weight_qty <![CDATA[<]]> 0
  </select>
  <update id="modifyBinWeightQty" >
  	UPDATE dic_wh_storage_bin b
	INNER JOIN (
		SELECT
			wh_code,
			type_code,
			bin_code,
			SUM(
				(
					CASE debit_credit
					WHEN 's' THEN
						1
					ELSE
						- 1
					END
				) * bin_weight_qty
			) bin_weight_qty
		FROM
			sinobec_ins_doc_bin
		WHERE
			ins_doc_code = #{insDocCode}
		GROUP BY
			wh_code,
			type_code,
			bin_code
	) a ON a.wh_code = b.wh_code
	AND a.bin_code = b.bin_code
	AND a.type_code = b.type_code
	SET b.current_weight = ifnull(b.current_weight,0) + ifnull(a.bin_weight_qty,0),
		b.stock_bin_modify_time = NOW(6)
  </update>

<select id="QueryInsDocBinOnPaging"  resultType="com.inossem.wms.model.sinobec.query.InsDocInfoDaoVo">
  select
  sidb.ins_doc_code, sidb.ins_doc_rid, sidb.mat_code, sidb.bundle_code, sidb.shipping_ref, sidb.heat_code, sidb.skid_code,
    sidb.corp_code, sidb.item_numb, sidb.lot_numb, sidb.wh_code, sidb.type_code, sidb.bin_code, sidb.receipt_unit_code,
    sidb.receipt_qty, sidb.weight_unit_code, sidb.weight_qty, sidb.bin_weight_unit_code, sidb.bin_weight_qty,
    sidb.stock_status,
    case when sidb.debit_credit='S' then 'Add'
    when  sidb.debit_credit='H' then 'Del'
    else '' end debit_credit_name,
    sidb.refer_receipt_code, sidb.refer_receipt_rid, sidb.refer_receipt_bid,
    sidb.refer_receipt_type, sidb.is_delete, write_off, sidb.create_time, sidb.modify_time, sidb.create_user_id,
    sidb.modify_user_id,corp.corp_name,
    sidb.ext0,sidb.ext1,sidb.ext2,sidb.ext3,sidb.ext4,sidb.ext5,sidb.ext6,sidb.ext7,sidb.ext8,sidb.ext9,
    sidb.ext10,sidb.ext11,sidb.ext12,sidb.ext13,sidb.ext14,sidb.ext15,

    m.mat_name ,
  case when sidb.refer_receipt_type='101' then 'Inbound deliver note'
        when sidb.refer_receipt_type='102' then 'Customer Return'
        when sidb.refer_receipt_type='103' then 'Transfer In'
        when sidb.refer_receipt_type='104' then 'Adjustment In'
        when sidb.refer_receipt_type='201' then 'Sales Docment'
        when sidb.refer_receipt_type='202' then 'Transfer Out'
        when sidb.refer_receipt_type='203' then 'Adjustment Out'
        when sidb.refer_receipt_type='301' then 'PutAway'
        when sidb.refer_receipt_type='302' then 'Pick'
        when sidb.refer_receipt_type='303' then 'Bin Move'
        when sidb.refer_receipt_type='400' then 'Count'
        else '' end refer_receipt_type_name ,
        su.user_name
  from sinobec_ins_doc_bin sidb
  <!-- inner join dic_corp corp on sidb.corp_code=corp.corp_code and sidb.refer_receipt_type != 0 -->
  inner join dic_corp corp on sidb.wh_code=corp.corp_code
  inner join dic_material m on sidb.mat_code = m.mat_code
  inner join sys_user su on su.user_id = sidb.create_user_id
  where  sidb.is_delete=0
  and sidb.refer_receipt_type != 0
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(sdate)">
    and sidb.create_time <![CDATA[>=]]>  #{sdate}
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(edate)">
    and sidb.create_time <![CDATA[<=]]>  #{edate}
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(bundleCode)">
    and sidb.bundle_code  =  #{bundleCode}
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(lotNumb)">
    and sidb.lot_numb  =  #{lotNumb}
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(whCode)">
    and sidb.wh_code  =  #{whCode}
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(tranType)">
    <!-- and sidb.refer_receipt_code  = #{soCode} -->
    <!-- and sidb.refer_receipt_code like CONCAT('%',#{soCode},'%') -->
    <if test="tranType.indexOf(',') != -1">
		and (
		<foreach item="item" index="index" collection="tranType.split(',')" open="" separator="or" close="">
			sidb.refer_receipt_type like CONCAT('%',#{item},'%')
		</foreach>
		)
	</if>
	<if test="tranType.indexOf(',') == -1">
			and ( sidb.refer_receipt_type like CONCAT('%',#{tranType},'%'))
	</if>
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(soCode)">
    <!-- and sidb.refer_receipt_code  = #{soCode} -->
    <!-- and sidb.refer_receipt_code like CONCAT('%',#{soCode},'%') -->
    <if test="soCode.indexOf(',') != -1">
		and (
		<foreach item="item" index="index" collection="soCode.split(',')" open="" separator="or" close="">
			sidb.refer_receipt_code like CONCAT('%',#{item},'%')
		</foreach>
		)
	</if>
	<if test="soCode.indexOf(',') == -1">
			and ( sidb.refer_receipt_code like CONCAT('%',#{soCode},'%'))
	</if>
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(shippingRef)">
    and sidb.shipping_ref  = #{shippingRef}
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(typeCode)">
    <if test="typeCode.indexOf(',') != -1">
		and (
		<foreach item="item" index="index" collection="typeCode.split(',')" open="" separator="or" close="">
			sidb.type_code like CONCAT('%',#{item},'%')
		</foreach>
		)
	</if>
	<if test="typeCode.indexOf(',') == -1">
			and ( sidb.type_code like CONCAT('%',#{typeCode},'%'))
	</if>
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(binCode)">
    <if test="binCode.indexOf(',') != -1">
		and (
		<foreach item="item" index="index" collection="binCode.split(',')" open="" separator="or" close="">
			sidb.bin_code like CONCAT('%',#{item},'%')
		</foreach>
		)
	</if>
	<if test="binCode.indexOf(',') == -1">
			and ( sidb.bin_code like CONCAT('%',#{binCode},'%'))
	</if>
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(matCode)">
    <if test="matCode.indexOf(',') != -1">
		and (
		<foreach item="item" index="index" collection="matCode.split(',')" open="" separator="or" close="">
			sidb.mat_code like CONCAT('%',#{item},'%')
		</foreach>
		)
	</if>
	<if test="matCode.indexOf(',') == -1">
			and ( sidb.mat_code like CONCAT('%',#{matCode},'%'))
	</if>
  </if>
  <!-- <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(corpCode)">
    and sidb.corp_code  = #{corpCode}
  </if> -->
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(condition)">
    <if test="condition.indexOf(',') != -1">
		and (
		<foreach item="item" index="index" collection="condition.split(',')" open="" separator="or" close="">
			sidb.mat_code like CONCAT('%',#{item},'%')
		</foreach>
		)
	</if>
	<if test="condition.indexOf(',') == -1">
			and ( sidb.mat_code like CONCAT('%',#{condition},'%'))
	</if>
  </if>
  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(ext0)">
    <if test="ext0.indexOf(',') != -1">
		and (
		<foreach item="item" index="index" collection="ext0.split(',')" open="" separator="or" close="">
			sidb.ext0 like CONCAT('%',#{item},'%')
		</foreach>
		)
	</if>
	<if test="ext0.indexOf(',') == -1">
			and ( sidb.ext0 like CONCAT('%',#{ext0},'%'))
	</if>
  </if>
  <!-- <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(ext1)"> -->
  <if test=" ext1 != null and ext1 !='' ">
  	<if test="ext1.indexOf(',') != -1">
		and (
		<foreach item="item" index="index" collection="ext1.split(',')" open="" separator="or" close="">
			sidb.ext1 like CONCAT('%',#{item},'%')
		</foreach>
		)
	</if>
	<if test="ext1.indexOf(',') == -1">
			and ( sidb.ext1 like CONCAT('%',#{ext1},'%'))
	</if>
  </if>
</select>
  <update id="modifyOverWeightLog" >
  	UPDATE sinobec_ins_doc_bin
  	set over_weight = #{overWeight}
  	where ins_doc_code = #{insDocCode}
  	and (wh_code,type_code,bin_code) in
  	<foreach collection="binList" item="item" index="index" separator="," open="(" close=")">
  		(
  			#{item.whCode},
  			#{item.typeCode},
  			#{item.binCode}
  		)
  	</foreach>
  </update>

  <delete id="deleteByReferReceiptCode">
    delete from sinobec_ins_doc_bin
    where refer_receipt_code = #{receiptCode,jdbcType=VARCHAR}
  </delete>


<!--标记判断-->
</mapper>
