<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inossem.wms.dao.sinobec.SinobecStockMapper">
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.sinobec.SinobecStock" >
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 20:45:33 CST 2020.
    -->
    <id column="stock_id" jdbcType="INTEGER" property="stockId" />
    <result column="bundle_code" jdbcType="VARCHAR" property="bundleCode" />
    <result column="shipping_ref" jdbcType="VARCHAR" property="shippingRef" />
    <result column="wh_code" jdbcType="VARCHAR" property="whCode" />
    <result column="type_code" jdbcType="VARCHAR" property="typeCode" />
    <result column="bin_code" jdbcType="VARCHAR" property="binCode" />
    <result column="weight_unit_code" jdbcType="VARCHAR" property="weightUnitCode" />
    <result column="weight_qty" jdbcType="DECIMAL" property="weightQty" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="receipt_unit_code" jdbcType="VARCHAR" property="receiptUnitCode" />
    <result column="receipt_qty" jdbcType="DECIMAL" property="receiptQty" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="modify_user_id" jdbcType="INTEGER" property="modifyUserId" />
    <result column="mat_code" jdbcType="VARCHAR" property="matCode" />
    <result column="ext0" jdbcType="VARCHAR" property="ext0" />
    <result column="ext1" jdbcType="VARCHAR" property="ext1" />
    <result column="ext2" jdbcType="VARCHAR" property="ext2" />
    <result column="ext3" jdbcType="VARCHAR" property="ext3" />
      <result column="ext4" jdbcType="VARCHAR" property="ext4" />
      <result column="ext5" jdbcType="VARCHAR" property="ext5" />
      <result column="ext6" jdbcType="VARCHAR" property="ext6" />
      <result column="ext7" jdbcType="VARCHAR" property="ext7" />
      <result column="ext8" jdbcType="VARCHAR" property="ext8" />
      <result column="ext9" jdbcType="VARCHAR" property="ext9" />
      <result column="ext10" jdbcType="VARCHAR" property="ext10" />
      <result column="ext11" jdbcType="VARCHAR" property="ext11" />
      <result column="ext12" jdbcType="VARCHAR" property="ext12" />
      <result column="ext13" jdbcType="VARCHAR" property="ext13" />
      <result column="ext14" jdbcType="VARCHAR" property="ext14" />
      <result column="ext15" jdbcType="VARCHAR" property="ext15" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 20:45:33 CST 2020.
    -->
    stock_id, bundle_code, shipping_ref, wh_code, type_code, bin_code, weight_unit_code,
    weight_qty, create_time, modify_time, receipt_unit_code, receipt_qty, create_user_id,
    modify_user_id,ext0,ext1,ext2,ext3,ext4,ext5,ext6,ext7,ext8,ext9,ext10,ext11,ext12,ext13,ext14,ext15
  </sql>
  <sql id="Base_Column_List_selectStockByGpOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 20:45:33 CST 2020.
    -->
    stock.stock_id, stock.bundle_code, stock.shipping_ref, stock.wh_code, stock.type_code, stock.bin_code, stock.weight_unit_code,
    stock.weight_qty, stock.create_time, stock.modify_time, stock.receipt_unit_code, stock.receipt_qty, stock.create_user_id,
    stock.modify_user_id,stock.ext0,stock.ext1,stock.ext2,stock.ext3,stock.ext4,stock.ext5,stock.ext6,stock.ext7,stock.ext8,
    stock.ext9,stock.ext10,stock.ext11,stock.ext12,stock.ext13,stock.ext14,stock.ext15
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 20:45:33 CST 2020.
    -->
    select
    <include refid="Base_Column_List" />
    from sinobec_stock
    where stock_id = #{stockId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 20:45:33 CST 2020.
    -->
    delete from sinobec_stock
    where stock_id = #{stockId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.inossem.wms.model.sinobec.SinobecStock">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 20:45:33 CST 2020.
    -->
    insert into sinobec_stock (stock_id, bundle_code, shipping_ref,
      wh_code, type_code, bin_code,
      weight_unit_code, weight_qty, create_time,
      modify_time, receipt_unit_code, receipt_qty,
      create_user_id, modify_user_id)
    values (#{stockId,jdbcType=INTEGER}, #{bundleCode,jdbcType=VARCHAR}, #{shippingRef,jdbcType=VARCHAR},
      #{whCode,jdbcType=VARCHAR}, #{typeCode,jdbcType=VARCHAR}, #{binCode,jdbcType=VARCHAR},
      #{weightUnitCode,jdbcType=VARCHAR}, #{weightQty,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP},
      #{modifyTime,jdbcType=TIMESTAMP}, #{receiptUnitCode,jdbcType=VARCHAR}, #{receiptQty,jdbcType=DECIMAL},
      #{createUserId,jdbcType=INTEGER}, #{modifyUserId,jdbcType=INTEGER})
  </insert>

    <insert id="insertAll" parameterType="com.inossem.wms.model.sinobec.SinobecStock">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 23 20:45:33 CST 2020.
        -->
        insert into sinobec_stock (stock_id, bundle_code, shipping_ref,
        wh_code, type_code, bin_code,
        weight_unit_code, weight_qty, create_time,
        modify_time, receipt_unit_code, receipt_qty,
        create_user_id, modify_user_id,ext0,ext1,ext2,
        ext3,ext4,ext5,ext6,ext7,ext8,ext9,ext10,
        ext11,ext12,ext13,ext14,ext15)
        values (#{stockId,jdbcType=INTEGER}, #{bundleCode,jdbcType=VARCHAR}, #{shippingRef,jdbcType=VARCHAR},
        #{whCode,jdbcType=VARCHAR}, #{typeCode,jdbcType=VARCHAR}, #{binCode,jdbcType=VARCHAR},
        #{weightUnitCode,jdbcType=VARCHAR}, #{weightQty,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP},
        #{modifyTime,jdbcType=TIMESTAMP}, #{receiptUnitCode,jdbcType=VARCHAR}, #{receiptQty,jdbcType=DECIMAL},
        #{createUserId,jdbcType=INTEGER}, #{modifyUserId,jdbcType=INTEGER},#{ext0,jdbcType=VARCHAR},#{ext1,jdbcType=VARCHAR},
        #{ext2,jdbcType=VARCHAR},#{ext3,jdbcType=VARCHAR},#{ext4,jdbcType=VARCHAR},#{ext5,jdbcType=VARCHAR},
        #{ext6,jdbcType=VARCHAR},#{ext7,jdbcType=VARCHAR},#{ext8,jdbcType=VARCHAR},#{ext9,jdbcType=VARCHAR},
        #{ext10,jdbcType=VARCHAR},#{ext11,jdbcType=VARCHAR},#{ext12,jdbcType=VARCHAR},#{ext13,jdbcType=VARCHAR},
        #{ext14,jdbcType=VARCHAR},#{ext15,jdbcType=VARCHAR})
    </insert>

  <insert id="insertSelective" parameterType="com.inossem.wms.model.sinobec.SinobecStock">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 20:45:33 CST 2020.
    -->
    insert into sinobec_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockId != null">
        stock_id,
      </if>
      <if test="bundleCode != null">
        bundle_code,
      </if>
      <if test="shippingRef != null">
        shipping_ref,
      </if>
      <if test="whCode != null">
        wh_code,
      </if>
      <if test="typeCode != null">
        type_code,
      </if>
      <if test="binCode != null">
        bin_code,
      </if>
      <if test="weightUnitCode != null">
        weight_unit_code,
      </if>
      <if test="weightQty != null">
        weight_qty,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="receiptUnitCode != null">
        receipt_unit_code,
      </if>
      <if test="receiptQty != null">
        receipt_qty,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="modifyUserId != null">
        modify_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockId != null">
        #{stockId,jdbcType=INTEGER},
      </if>
      <if test="bundleCode != null">
        #{bundleCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingRef != null">
        #{shippingRef,jdbcType=VARCHAR},
      </if>
      <if test="whCode != null">
        #{whCode,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="binCode != null">
        #{binCode,jdbcType=VARCHAR},
      </if>
      <if test="weightUnitCode != null">
        #{weightUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="weightQty != null">
        #{weightQty,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiptUnitCode != null">
        #{receiptUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptQty != null">
        #{receiptQty,jdbcType=DECIMAL},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyUserId != null">
        #{modifyUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.sinobec.SinobecStock">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 20:45:33 CST 2020.
    -->
    update sinobec_stock
    <set>
      <if test="bundleCode != null">
        bundle_code = #{bundleCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingRef != null">
        shipping_ref = #{shippingRef,jdbcType=VARCHAR},
      </if>
      <if test="whCode != null">
        wh_code = #{whCode,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="binCode != null">
        bin_code = #{binCode,jdbcType=VARCHAR},
      </if>
      <if test="weightUnitCode != null">
        weight_unit_code = #{weightUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="weightQty != null">
        weight_qty = #{weightQty,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiptUnitCode != null">
        receipt_unit_code = #{receiptUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptQty != null">
        receipt_qty = #{receiptQty,jdbcType=DECIMAL},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyUserId != null">
        modify_user_id = #{modifyUserId,jdbcType=INTEGER},
      </if>
    </set>
    where stock_id = #{stockId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.sinobec.SinobecStock">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 20:45:33 CST 2020.
    -->
    update sinobec_stock
    set bundle_code = #{bundleCode,jdbcType=VARCHAR},
      shipping_ref = #{shippingRef,jdbcType=VARCHAR},
      wh_code = #{whCode,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      bin_code = #{binCode,jdbcType=VARCHAR},
      weight_unit_code = #{weightUnitCode,jdbcType=VARCHAR},
      weight_qty = #{weightQty,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      receipt_unit_code = #{receiptUnitCode,jdbcType=VARCHAR},
      receipt_qty = #{receiptQty,jdbcType=DECIMAL},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      modify_user_id = #{modifyUserId,jdbcType=INTEGER}
    where stock_id = #{stockId,jdbcType=INTEGER}
  </update>
  <!-- 根据bundleCode获取信息 -->
  <select id="getBundleInfo"
  	parameterType="com.inossem.wms.model.sinobec.task.BundleQueryCo"
  	resultType="com.inossem.wms.model.sinobec.stock.SinobecStockVo">

    select
    ss.stock_id, ss.bundle_code, ss.shipping_ref, ss.wh_code, ss.type_code, ss.bin_code, ss.weight_unit_code,
    ss.weight_qty, ss.receipt_unit_code, ss.receipt_qty, ss.ext0, ss.ext1, ss.ext2,
    bi.receipt_code, bi.receipt_rid, bi.receipt_type, bi.heat_code, bi.skid_code,
    bi.mat_code, bi.corp_code, bi.item_numb, bi.lot_numb, bi.input_date, bi.stock_status,sb.weight_unit_code bin_weight_unit_code,
    sb.current_weight,sb.weight_max,st.type_name,m.mat_name,m.mat_ext1,input.receipt_code input_code ,input.remark,
    ss.ext0,ss.ext1,ss.ext2,ss.ext3,ss.ext4,ss.ext5,ss.ext6,ss.ext7,ss.ext8,ss.ext9,
    ss.ext10,ss.ext11,ss.ext12,ss.ext13,ss.ext14,ss.ext15
    from sinobec_stock ss
    inner join sinobec_dic_bundle_info bi on ss.bundle_code = bi.bundle_code
    <if test=" bundleCode != null and bundleCode !='' ">
    	and ss.bundle_code = #{bundleCode}
    </if>
    <if test=" whCode != null and whCode !='' ">
    	and ss.wh_code = #{whCode}
    </if>
    <if test=" typeCode != null and typeCode !='' ">
    	and ss.type_code = #{typeCode}
    </if>
    <if test=" binCode != null and binCode !='' ">
    	<!-- and ss.bin_code = #{binCode} -->
    	and ss.bin_code like CONCAT('%',#{binCode},'%')
    </if>
    <if test=" receiptCode != null and receiptCode !='' ">
    	and bi.receipt_code = #{receiptCode}
    </if>
    <if test=" heatCode != null and heatCode !='' ">
    	and bi.heat_code = #{heatCode}
    </if>
    <if test=" skidCode != null and skidCode !='' ">
    	and bi.skid_code = #{skidCode}
    </if>
    <if test=" shippingRef != null and shippingRef !='' ">
    	and bi.shipping_ref = #{shippingRef}
    </if>
    <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(condition)">
    and (ss.bundle_code   like CONCAT('%',#{condition},'%')
    or ss.wh_code  like CONCAT('%',#{condition},'%')
    or ss.type_code  like  CONCAT('%',#{condition},'%')
    or ss.bin_code  like CONCAT('%',#{condition},'%')
    or bi.receipt_code like CONCAT('%',#{condition},'%')
    or ss.shipping_ref like CONCAT('%',#{condition},'%')
    or bi.heat_code like CONCAT('%',#{condition},'%')
    or bi.skid_code like CONCAT('%',#{condition},'%')
    or bi.mat_code like CONCAT('%',#{condition},'%')

    )
  </if>
    inner join dic_wh_storage_bin sb on ss.wh_code = sb.wh_code and sb.type_code = ss.type_code and sb.bin_code =
    ss.bin_code
    INNER JOIN dic_wh_storage_type st on ss.wh_code = st.wh_code and ss.type_code= st.type_code
    inner join dic_material m on bi.mat_code = m.mat_code
    <!--  left join sinobec_biz_input input on bi.bundle_code = input.bundle_code and bi.receipt_code = input.receipt_code and bi.receipt_type = input.receipt_type-->
    left join sinobec_biz_input input on bi.receipt_rid = input.receipt_rid
  </select>

  <select id="searchBundleInfo"
  	parameterType="com.inossem.wms.model.sinobec.task.BundleQueryCo"
  	resultType="com.inossem.wms.model.sinobec.stock.SinobecStockVo">

    select
    ss.stock_id, ss.bundle_code, ss.shipping_ref, ss.wh_code, ss.type_code, ss.bin_code, ss.weight_unit_code,
    ss.weight_qty, ss.receipt_unit_code, ss.receipt_qty,
    bi.receipt_code, bi.receipt_rid, bi.receipt_type, bi.heat_code, bi.skid_code,
    bi.mat_code, bi.corp_code, bi.item_numb, bi.lot_numb, bi.input_date, bi.stock_status,sb.weight_unit_code bin_weight_unit_code,
    sb.current_weight,sb.weight_max,st.type_name,m.mat_name
    from sinobec_stock ss
    inner join sinobec_dic_bundle_info bi on ss.bundle_code = bi.bundle_code and ss.shipping_ref = bi.shipping_ref
    <if test=" bundleCode != null and bundleCode !='' ">
    	and ss.bundle_code = #{bundleCode}
    </if>
    <if test=" whCode != null and whCode !='' ">
    	and ss.wh_code = #{whCode}
    </if>
    <if test=" typeCode != null and typeCode !='' ">
    	and ss.type_code = #{typeCode}
    </if>
    <if test=" binCode != null and binCode !='' ">
    	and ss.bin_code = #{binCode}
    </if>
    <if test=" receiptCode != null and receiptCode !='' ">
    	and bi.receipt_code = #{receiptCode}
    </if>
    <if test=" heatCode != null and heatCode !='' ">
    	and bi.heat_code = #{heatCode}
    </if>
    <if test=" skidCode != null and skidCode !='' ">
    	and bi.skid_code = #{skidCode}
    </if>
    <if test=" shippingRef != null and shippingRef !='' ">
    	and bi.shipping_ref = #{shippingRef}
    </if>
    <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(condition)">
    and (ss.bundle_code   like CONCAT('%',#{condition},'%')
    or ss.wh_code  like CONCAT('%',#{condition},'%')
    or ss.type_code  like  CONCAT('%',#{condition},'%')
    or ss.bin_code  like CONCAT('%',#{condition},'%')
    or bi.receipt_code like CONCAT('%',#{condition},'%')
    or ss.shipping_ref like CONCAT('%',#{condition},'%')
    or bi.heat_code like CONCAT('%',#{condition},'%')
    or bi.skid_code like CONCAT('%',#{condition},'%')
    or bi.mat_code like CONCAT('%',#{condition},'%')

    )
  </if>
    inner join dic_wh_storage_bin sb on ss.wh_code = sb.wh_code and sb.type_code = ss.type_code and sb.bin_code =
    ss.bin_code
    INNER JOIN dic_wh_storage_type st on ss.wh_code = st.wh_code and ss.type_code= st.type_code
    inner join dic_material m on bi.mat_code = m.mat_code
    <!-- left join sinobec_biz_input input on bi.bundle_code = input.bundle_code and bi.receipt_code = input.receipt_code and bi.receipt_type = input.receipt_type -->
  </select>
  <select id="getBundleInfoOnPaging1"
          parameterType="com.inossem.wms.model.sinobec.task.BundleQueryCo"
          resultType="com.inossem.wms.model.sinobec.stock.SinobecStockVo">

    select type_code, bin_code, mat_code, weight_qty
    from (select sb.type_code, sb.bin_code, ss.bundle_code,ss.weight_qty
    from dic_wh_storage_bin sb
    left join sinobec_stock ss on ss.wh_code = sb.wh_code and sb.type_code = ss.type_code and sb.bin_code = ss.bin_code
	union
	select sb.type_code, sb.bin_code, ss.bundle_code,ss.weight_qty
	from dic_wh_storage_bin sb
	right join  sinobec_stock ss on ss.wh_code = sb.wh_code and sb.type_code = ss.type_code and sb.bin_code = ss.bin_code) a
	left join sinobec_dic_bundle_info bi on  bi.bundle_code= a.bundle_code
	where 1=1
    <if test=" whCode != null and whCode !='' ">
      and wh_code = #{whCode}
    </if>
    <if test=" typeCode != null and typeCode !='' ">
    	<if test="typeCode.indexOf(',') != -1">
		    <!-- and  type_code in -->
		    and (
			<foreach item="item" index="index" collection="typeCode.split(',')"  open="" separator="or" close="">
				<!-- #{item} -->
				type_code like CONCAT('%',#{item},'%')
			</foreach>
			)
		</if>
		<if test="typeCode.indexOf(',') == -1">
				and  (type_code like CONCAT('%',#{typeCode},'%'))
		</if>
   </if>
    <if test=" binCode != null and binCode !='' ">
    	<if test="binCode.indexOf(',') != -1">
		    and (
			<foreach item="item" index="index" collection="binCode.split(',')" open="" separator="or" close="">
				bin_code like CONCAT('%',#{item},'%')
			</foreach>
			)
		</if>
		<if test="binCode.indexOf(',') == -1">
				and ( bin_code like CONCAT('%',#{binCode},'%'))
		</if>
    </if>

    <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(condition)">
    	<if test="condition.indexOf(',') != -1">
		    and (
			<foreach item="item" index="index" collection="condition.split(',')" open="" separator="or" close="">
				mat_code like CONCAT('%',#{item},'%')
			</foreach>
			)
		</if>
		<if test="condition.indexOf(',') == -1">
				and  (mat_code like CONCAT('%',#{condition},'%'))
		</if>
  </if>

  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(isEmpty)">
    	<if test="isEmpty == '1'.toString()"><!-- 等于1 需要查询 空仓位 -->
    		and mat_code is null
    	</if>
    	<if test="isEmpty == '2'.toString()"><!-- 等于2 需要查询 非空仓位 -->
    	    and mat_code is not null
    	</if>
    	<if test="isEmpty == '3'.toString()"><!-- 等于3 不做过滤 -->

    	</if>
  </if>
  </select>
  <select id="getBundleInfoForSort"
          parameterType="com.inossem.wms.model.sinobec.task.BundleQueryCo"
          resultType="com.inossem.wms.model.sinobec.stock.SinobecStockVo">

    select
    ss.stock_id, ss.bundle_code, ss.shipping_ref, ss.wh_code, ss.type_code, ss.bin_code, ss.weight_unit_code,
    ss.weight_qty, ss.receipt_unit_code, ss.receipt_qty,
    bi.receipt_code, bi.receipt_rid, bi.receipt_type, bi.heat_code, bi.skid_code,
    bi.mat_code, bi.corp_code, bi.item_numb, bi.lot_numb, bi.input_date, bi.stock_status,sb.weight_unit_code bin_weight_unit_code,
    sb.current_weight,sb.weight_max,st.type_name,m.mat_name,
    ss.ext0, ss.ext1, ss.ext2, ss.ext3, ss.ext4, ss.ext5, ss.ext6, ss.ext7, ss.ext8, ss.ext9, ss.ext10, ss.ext11, ss.ext12, ss.ext13, ss.ext14, ss.ext15
    from sinobec_stock ss
    inner join sinobec_dic_bundle_info bi on ss.bundle_code = bi.bundle_code and ss.shipping_ref = bi.shipping_ref
    <if test=" whCode != null and whCode !='' ">
      and ss.wh_code = #{whCode}
    </if>
    <if test=" typeCode != null and typeCode !='' ">
    	<if test="typeCode.indexOf(',') != -1">
		    <!-- and  type_code in -->
		    and (
			<foreach item="item" index="index" collection="typeCode.split(',')"  open="" separator="or" close="">
				<!-- #{item} -->
				ss.type_code like CONCAT('%',#{item},'%')
			</foreach>
			)
		</if>
		<if test="typeCode.indexOf(',') == -1">
				and  (ss.type_code like CONCAT('%',#{typeCode},'%'))
		</if>
   </if>
    <if test=" binCode != null and binCode !='' ">
    	<if test="binCode.indexOf(',') != -1">
		    and (
			<foreach item="item" index="index" collection="binCode.split(',')" open="" separator="or" close="">
				ss.bin_code like CONCAT('%',#{item},'%')
			</foreach>
			)
		</if>
		<if test="binCode.indexOf(',') == -1">
				and ( ss.bin_code like CONCAT('%',#{binCode},'%'))
		</if>
    </if>

    <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(condition)">
    	<if test="condition.indexOf(',') != -1">
		    and (
			<foreach item="item" index="index" collection="condition.split(',')" open="" separator="or" close="">
				bi.mat_code like CONCAT('%',#{item},'%')
			</foreach>
			)
		</if>
		<if test="condition.indexOf(',') == -1">
				and  (bi.mat_code like CONCAT('%',#{condition},'%'))
		</if>
  </if>

  <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(isEmpty)">
    	<if test="isEmpty == '1'.toString()"><!-- 等于1 需要查询 空仓位 -->
    		and bi.mat_code is null
    	</if>
    	<if test="isEmpty == '2'.toString()"><!-- 等于2 需要查询 非空仓位 -->
    	    and bi.mat_code is not null
    	</if>
    	<if test="isEmpty == '3'.toString()"><!-- 等于3 不做过滤 -->

    	</if>
  </if>
  	inner join dic_wh_storage_bin sb on ss.wh_code = sb.wh_code and sb.type_code = ss.type_code and sb.bin_code = ss.bin_code
  	INNER JOIN dic_wh_storage_type st on ss.wh_code = st.wh_code and ss.type_code= st.type_code
  	inner join dic_material m on bi.mat_code = m.mat_code
  	where sb.freeze_input = 0 AND sb.freeze_output = 0
  </select>
  <select id="getBundleInfoOnPaging"
          parameterType="com.inossem.wms.model.sinobec.task.BundleQueryCo"
          resultType="com.inossem.wms.model.sinobec.stock.SinobecStockVo">

    select
    ss.stock_id, ss.bundle_code, ss.shipping_ref, ss.wh_code, ss.type_code, ss.bin_code, ss.weight_unit_code,
    ss.weight_qty, ss.receipt_unit_code, ss.receipt_qty,
    ss.ext0, ss.ext1, ss.ext2,ss.ext3,ss.ext4,ss.ext5,ss.ext6,ss.ext7,ss.ext8,ss.ext9,ss.ext10,ss.ext11,ss.ext12,ss.ext13,ss.ext14,ss.ext15,
    m.mat_ext1,
    bi.receipt_code, bi.receipt_rid, bi.receipt_type, bi.heat_code, bi.skid_code,
    bi.mat_code, bi.corp_code, bi.item_numb, bi.lot_numb, bi.input_date, bi.stock_status,sb.weight_unit_code bin_weight_unit_code,
    sb.current_weight,sb.weight_max,m.mat_name,<!-- mg.mat_group_name, -->
    case when datediff(now(), bi.input_date) <![CDATA[>=]]> 0 and datediff(now(), bi.input_date) <![CDATA[<=]]> 30 then '0-30days'
         when datediff(now(), bi.input_date) <![CDATA[>]]> 30 and datediff(now(), bi.input_date) <![CDATA[<=]]> 60 then '31-60days'
         when datediff(now(), bi.input_date) <![CDATA[>]]> 60 and datediff(now(), bi.input_date) <![CDATA[<=]]> 90 then '61-90 days'
         when datediff(now(), bi.input_date) <![CDATA[>]]> 90 and datediff(now(), bi.input_date) <![CDATA[<=]]> 180 then '91-180 days'
         when datediff(now(), bi.input_date) <![CDATA[>]]> 180 then 'one year +' end aging
    from sinobec_stock ss
    <!-- inner join sinobec_dic_bundle_info bi on ss.bundle_code = bi.bundle_code and ss.shipping_ref = bi.shipping_ref -->
    inner join sinobec_dic_bundle_info bi on ss.bundle_code = bi.bundle_code 
    <if test=" bundleCode != null and bundleCode !='' ">
      and ss.bundle_code = #{bundleCode}
    </if>
    <if test=" whCode != null and whCode !='' ">
      and ss.wh_code = #{whCode}
    </if>

    <if test=" receiptCode != null and receiptCode !='' ">
      and bi.receipt_code = #{receiptCode}
    </if>
    <if test=" lotNumb != null and lotNumb !='' ">
      and bi.lot_numb = #{lotNumb}
    </if>

    <if test=" sDate != null and sDate !='' ">
      and bi.input_date  >= #{sDate}
    </if>

    <if test=" eDate != null and eDate !='' ">
      and bi.input_date <![CDATA[<=]]> #{eDate}
    </if>

    inner join dic_material m on bi.mat_code = m.mat_code
    inner join dic_wh_storage_bin sb on ss.wh_code = sb.wh_code and sb.type_code = ss.type_code and sb.bin_code = ss.bin_code
    <!-- inner join dic_material_group mg on bi.lot_numb = mg.mat_group_code -->
    where 1 = 1
    <if test=" typeCode != null and typeCode !='' ">
      	<if test="typeCode.indexOf(',') != -1">
		    and (
			<foreach item="item" index="index" collection="typeCode.split(',')" open="" separator="or" close="">
				ss.type_code like CONCAT('%',#{item},'%')
			</foreach>
			)
		</if>
		<if test="typeCode.indexOf(',') == -1">
				and  (ss.type_code like CONCAT('%',#{typeCode},'%'))
		</if>
    </if>
    <if test=" binCode != null and binCode !='' ">
    	<if test="binCode.indexOf(',') != -1">
		    and (
			<foreach item="item" index="index" collection="binCode.split(',')" open="" separator="or" close="">
				ss.bin_code like CONCAT('%',#{item},'%')
			</foreach>
			)
		</if>
		<if test="binCode.indexOf(',') == -1">
				and (ss.bin_code like CONCAT('%',#{binCode},'%'))
		</if>
    </if>
    <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(condition)">
    	<if test="condition.indexOf(',') != -1">
		    and (
			<foreach item="item" index="index" collection="condition.split(',')" open="" separator="or" close="">
				m.mat_code like CONCAT('%',#{item},'%')
			</foreach>
			)
		</if>
		<if test="condition.indexOf(',') == -1">
				and ( m.mat_code like CONCAT('%',#{condition},'%'))
		</if>

    <!-- and (ss.bundle_code   like CONCAT('%',#{condition},'%')
    or ss.wh_code  like CONCAT('%',#{condition},'%')
    or ss.type_code  like  CONCAT('%',#{condition},'%')
    or ss.bin_code  like CONCAT('%',#{condition},'%')
    or bi.receipt_code like CONCAT('%',#{condition},'%')
    or ss.shipping_ref like CONCAT('%',#{condition},'%')
    or bi.heat_code like CONCAT('%',#{condition},'%')
    or bi.skid_code like CONCAT('%',#{condition},'%')
    or bi.mat_code like CONCAT('%',#{condition},'%')

    ) -->
  </if>
  </select>


    <select id="getBundleInfoOnPagingTimeRange"
          parameterType="com.inossem.wms.model.sinobec.task.BundleQueryCo"
          resultType="com.inossem.wms.model.sinobec.stock.SinobecStockVo">

    select
    ss.stock_id, ss.bundle_code, ss.shipping_ref, ss.wh_code, ss.type_code, ss.bin_code, ss.weight_unit_code,
    ss.weight_qty, ss.receipt_unit_code, ss.receipt_qty,
    bi.receipt_code, bi.receipt_rid, bi.receipt_type, bi.heat_code, bi.skid_code,
    bi.mat_code, bi.corp_code, bi.item_numb, bi.lot_numb, bi.input_date, bi.stock_status,sb.weight_unit_code bin_weight_unit_code,
    sb.current_weight,sb.weight_max,m.mat_name,
    case when datediff(now(), bi.input_date) <![CDATA[>=]]> 0 and datediff(now(), bi.input_date) <![CDATA[<=]]> 30 then '0-30days'
         when datediff(now(), bi.input_date) <![CDATA[>]]> 30 and datediff(now(), bi.input_date) <![CDATA[<=]]> 60 then '31-60days'
         when datediff(now(), bi.input_date) <![CDATA[>]]> 60 and datediff(now(), bi.input_date) <![CDATA[<=]]> 90 then '61-90 days'
         when datediff(now(), bi.input_date) <![CDATA[>]]> 90 and datediff(now(), bi.input_date) <![CDATA[<=]]> 180 then '91-180 days'
         when datediff(now(), bi.input_date) <![CDATA[>]]> 180 then 'one year +' end aging
    from sinobec_stock ss
    inner join sinobec_dic_bundle_info bi on ss.bundle_code = bi.bundle_code and ss.shipping_ref = bi.shipping_ref
    <if test=" bundleCode != null and bundleCode !='' ">
      and ss.bundle_code = #{bundleCode}
    </if>
    <if test=" whCode != null and whCode !='' ">
      and ss.wh_code = #{whCode}
    </if>
    <if test=" typeCode != null and typeCode !='' ">
      and ss.type_code = #{typeCode}
    </if>
    <if test=" binCode != null and binCode !='' ">
      and ss.bin_code = #{binCode}
    </if>
    <if test=" receiptCode != null and receiptCode !='' ">
      and bi.receipt_code = #{receiptCode}
    </if>

    <if test=" sDate != null and sDate !='' ">
      <!-- and bi.input_date  >= #{sDate} -->
      and DATE_SUB(CURDATE(), INTERVAL #{sDate} DAY) >= date(bi.input_date)
    </if>

    <if test=" eDate != null and eDate !='' ">
      <!-- and bi.input_date <![CDATA[<=]]> #{eDate} -->
      and DATE_SUB(CURDATE(), INTERVAL #{eDate} DAY) <![CDATA[<=]]> date(bi.input_date)
    </if>
    <if test="@com.inossem.wms.page.PageInterceptor@isNotEmpty(condition)">
    and (ss.bundle_code   like CONCAT('%',#{condition},'%')
    or ss.wh_code  like CONCAT('%',#{condition},'%')
    or ss.type_code  like  CONCAT('%',#{condition},'%')
    or ss.bin_code  like CONCAT('%',#{condition},'%')
    or bi.receipt_code like CONCAT('%',#{condition},'%')
    or ss.shipping_ref like CONCAT('%',#{condition},'%')
    or bi.heat_code like CONCAT('%',#{condition},'%')
    or bi.skid_code like CONCAT('%',#{condition},'%')
    or bi.mat_code like CONCAT('%',#{condition},'%')

    )
  </if>
    inner join dic_material m on bi.mat_code = m.mat_code
    inner join dic_wh_storage_bin sb on ss.wh_code = sb.wh_code and sb.type_code = ss.type_code and sb.bin_code = ss.bin_code
  </select>



  <select id="selectStockByGpOrder"   resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List_selectStockByGpOrder" /> , mat_code
    from sinobec_stock stock
    INNER JOIN  dic_wh_storage_bin dwsb on stock.wh_code=dwsb.wh_code and stock.type_code=dwsb.type_code and stock.bin_code=dwsb.bin_code
    INNER JOIN sinobec_dic_bundle_info sdbi on stock.bundle_code = sdbi.bundle_code and stock.shipping_ref = sdbi.shipping_ref
    where
    <foreach collection="gps" open="(" separator="or" close=")" index="index" item="item">
      stock.bundle_code = #{item.bundleCode}
        <!--  AND stock.shipping_ref = #{item.shippingRef}--><!-- sinobec 项目的特殊需求 -->
    </foreach>
    and stock.type_code not in
    <foreach collection="defaltType" open="(" separator="," close=")" index="index" item="item">
                #{item}
    </foreach>
    and  dwsb.freeze_input = 0 and dwsb.freeze_output = 0
  </select>

   <select id="selectStockByGpOrder2"   resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List_selectStockByGpOrder" /> , mat_code,sdbi.lot_numb,stock.ext9
    from sinobec_stock stock
    INNER JOIN  dic_wh_storage_bin dwsb on stock.wh_code=dwsb.wh_code and stock.type_code=dwsb.type_code and stock.bin_code=dwsb.bin_code
    INNER JOIN sinobec_dic_bundle_info sdbi on stock.bundle_code = sdbi.bundle_code
    where
    <foreach collection="gps" open="(" separator="or" close=")" index="index" item="item">
    	<choose>
    		<when test="  item.bundleCodeList != null and item.bundleCodeList.size()>0">
    			<foreach collection="item.bundleCodeList" open="(" separator="or" close=")" index="index" item="bdl">
      				stock.bundle_code = #{bdl}
      			</foreach>
    		</when>
    		<otherwise>
    			1 = 1
    		</otherwise>
    	</choose>
        <!--  AND stock.shipping_ref = #{item.shippingRef}--><!-- sinobec 项目的特殊需求 -->
    </foreach>
    and stock.type_code not in
    <foreach collection="defaltType" open="(" separator="," close=")" index="index" item="item">
                #{item}
    </foreach>
    <if test="whCode != null and whCode != ''" >
        and stock.wh_code = #{whCode,jdbcType=VARCHAR}
    </if>
    and  dwsb.freeze_input = 0 and dwsb.freeze_output = 0  ORDER BY stock.ext9
  </select>

  <!-- 先进先出 -->
  <select id="selectMaskStockByGpOrder"   resultType="com.inossem.wms.model.sinobec.stock.SinobecStockVo">
    select
    stock.stock_id, stock.bundle_code, stock.shipping_ref, stock.wh_code, stock.type_code, stock.bin_code, stock.weight_unit_code,
    stock.weight_qty, stock.create_time, stock.modify_time, stock.receipt_unit_code, stock.receipt_qty, stock.create_user_id,
    stock.modify_user_id,bi.mat_code,bi.vendor_code,
    bi.heat_code,bi.skid_code,bi.lot_numb
    from sinobec_stock stock
    INNER JOIN sinobec_dic_bundle_info bi on bi.bundle_code = stock.bundle_code and bi.shipping_ref = stock.shipping_ref
    where (bi.mat_code,bi.vendor_code,stock.wh_code) in
    <foreach collection="gps" open="(" separator="," close=")" index="index" item="item">
       	(
       		#{item.matCode},
        	#{item.vendorCode},
        	#{item.whCode}
        )
    </foreach>
     order by bi.input_date,stock.weight_qty,stock.stock_id

  </select>


  <select id="selectStockByBinCode" parameterType="java.util.List" resultType="com.inossem.wms.model.sinobec.stock.SinobecStockVo">
    select
    ss.stock_id, ss.bundle_code, ss.shipping_ref, ss.wh_code, ss.type_code, ss.bin_code, ss.weight_unit_code,
    ss.weight_qty, ss.receipt_unit_code, ss.receipt_qty,
    ss.ext0, ss.ext1, ss.ext2, ss.ext3, ss.ext4, ss.ext5, ss.ext6, ss.ext7, ss.ext8, ss.ext9, ss.ext10, ss.ext11, ss.ext12, ss.ext13, ss.ext14, ss.ext15,
    bi.receipt_code, bi.receipt_rid, bi.receipt_type, bi.heat_code, bi.skid_code,
    bi.mat_code, bi.corp_code, bi.item_numb, bi.lot_numb, bi.input_date, bi.stock_status , ss.modify_time
    from sinobec_stock ss inner join sinobec_dic_bundle_info bi
    on ss.bundle_code = bi.bundle_code and ss.shipping_ref = bi.shipping_ref and
    <foreach collection="list" open="(" separator="or" close=")" index="index" item="item">
      ss.wh_code = #{item.whCode}
      AND ss.type_code = #{item.typeCode}
      AND ss.bin_code = #{item.binCode}
    </foreach>
  </select>

  <select id="selectStockSumByKey" parameterType="map" resultType="java.math.BigDecimal">
    select sum(weight_qty) from sinobec_stock where bundle_code in (
	SELECT bundle_code FROM sinobec_dic_bundle_info
	where mat_code=#{sku,jdbcType=VARCHAR}
	<if test=" vin != null and vin !='' ">
      and ext0 = #{vin,jdbcType=VARCHAR}
    </if>
    <if test=" eng != null and eng !='' ">
      and ext1 = #{eng,jdbcType=VARCHAR}
    </if>
	)
	<!--and( type_code not in ('sp01','0102') or bin_code not in ('sp01','0102') )-->
	<!--<if test="loc != null and loc.size() >0">
		<foreach collection="loc" open="and (" separator=" " close=")" index="index" item="item">
			type_code not in (#{item}) or bin_code not in (#{item})
		</foreach>
	</if>-->
	<!--<foreach collection="type" open="and (" separator=" " close=")" index="index" item="item">
			type_code not in (#{item}) or bin_code not in (#{item})
	</foreach>-->
	and (
		type_code not in
		<foreach collection="type" open="(" separator="," close=")" index="index" item="item">
				#{item}
		</foreach>
		or bin_code not in
		<foreach collection="bin" open="(" separator="," close=")" index="index" item="item">
				#{item}
		</foreach>
	)
	<!--and (type_code not in ("bp01") or bin_code not in(0101) )and(type_code not in ("ib") or bin_code not in('ib'));-->
  </select>

  <select id="selectStockByKey" parameterType="map" resultType="com.inossem.wms.model.sinobec.stock.SinobecStockVo">
    select
    ss.stock_id, ss.bundle_code, ss.shipping_ref, ss.wh_code, ss.type_code, ss.bin_code, ss.weight_unit_code,
    ss.weight_qty, ss.receipt_unit_code, ss.receipt_qty,
    ss.modify_time
    from sinobec_stock ss
    where
      ss.wh_code = #{whCode,jdbcType=VARCHAR}
      AND ss.type_code = #{typeCode,jdbcType=VARCHAR}
      AND ss.bin_code = #{binCode,jdbcType=VARCHAR}
      AND ss.bundle_code = #{bundleCode,jdbcType=VARCHAR}
  </select>
  <update id="updateStockByKey" parameterType="map">
    update
  	sinobec_stock
  	set weight_qty = #{wQty,jdbcType=VARCHAR}
    where
      stock_id = #{stockId,jdbcType=INTEGER}
  </update>
  <delete id="deleteStockByKey" parameterType="map">
	delete
    from sinobec_stock
    where stock_id = #{stockId,jdbcType=INTEGER}
  </delete>

  <insert id="PLinsert" parameterType="com.inossem.wms.model.sinobec.SinobecStock">
    insert into sinobec_stock (
    bundle_code,
    <if test=" shippingRef != null and shippingRef !='' ">
    shipping_ref,
    </if>
    wh_code,
    type_code,
    bin_code,
    weight_unit_code,
    weight_qty,
    receipt_unit_code,
    receipt_qty)
    values (
    #{bundleCode,jdbcType=VARCHAR},
    <if test=" shippingRef != null and shippingRef !='' ">
    	#{shippingRef,jdbcType=VARCHAR},
    </if>
    #{whCode,jdbcType=VARCHAR},
    #{typeCode,jdbcType=VARCHAR},
    #{binCode,jdbcType=VARCHAR},
    #{weightUnitCode,jdbcType=VARCHAR},
    #{weightQty,jdbcType=DECIMAL},
    #{weightUnitCode,jdbcType=VARCHAR},
    #{weightQty,jdbcType=DECIMAL})
    ON  DUPLICATE  KEY  UPDATE
    bundle_code = values(bundle_code),
    <if test=" shippingRef != null and shippingRef !='' ">
      shipping_ref = values(shipping_ref),
    </if>
    wh_code = values(wh_code),
    type_code = values(type_code),
    bin_code = values(bin_code),
    weight_unit_code = values(weight_unit_code),
    weight_qty = values(weight_qty),
    receipt_unit_code = values(weight_unit_code),
    receipt_qty = values(weight_qty)
  </insert>

  <update id="updateRemark" parameterType="com.inossem.wms.vo.sinobec.SinobecBizInputVo">
    update sinobec_biz_input
    set remark = #{remark,jdbcType=VARCHAR}
    where receipt_code = #{receiptCode,jdbcType=VARCHAR}
     and bundle_code = #{bundleCode,jdbcType=VARCHAR}
  </update>

    <update id="updateStockByStockId">
    update sinobec_stock
    set bundle_code = #{bundleCode,jdbcType=VARCHAR},
        type_code = #{typeCode,jdbcType=VARCHAR},
        bin_code = #{binCode,jdbcType=VARCHAR}
    where stock_id = #{stockId,jdbcType=INTEGER}
  </update>

</mapper>
