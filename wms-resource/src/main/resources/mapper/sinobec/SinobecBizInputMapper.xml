<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.inossem.wms.dao.sinobec.SinobecBizInputMapper" >
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.sinobec.input.SinobecBizInput" >
    <id column="input_id" property="inputId" jdbcType="INTEGER" />
    <result column="receipt_code" property="receiptCode" jdbcType="VARCHAR" />
    <result column="receipt_rid" property="receiptRid" jdbcType="VARCHAR" />
    <result column="receipt_type" property="receiptType" jdbcType="INTEGER" />
    <result column="receipt_status" property="receiptStatus" jdbcType="TINYINT" />
    <result column="mat_code" property="matCode" jdbcType="VARCHAR" />
    <result column="unit_code" property="unitCode" jdbcType="VARCHAR" />
    <result column="bundle_code" property="bundleCode" jdbcType="VARCHAR" />
    <result column="shipping_ref" property="shippingRef" jdbcType="VARCHAR" />
    <result column="heat_code" property="heatCode" jdbcType="VARCHAR" />
    <result column="skid_code" property="skidCode" jdbcType="VARCHAR" />
    <result column="corp_code" property="corpCode" jdbcType="VARCHAR" />
    <result column="item_numb" property="itemNumb" jdbcType="VARCHAR" />
    <result column="lot_numb" property="lotNumb" jdbcType="VARCHAR" />
    <result column="wh_code" property="whCode" jdbcType="VARCHAR" />
    <result column="type_code" property="typeCode" jdbcType="VARCHAR" />
    <result column="bin_code" property="binCode" jdbcType="VARCHAR" />
    <result column="receipt_unit_code" property="receiptUnitCode" jdbcType="VARCHAR" />
    <result column="receipt_qty" property="receiptQty" jdbcType="DECIMAL" />
    <result column="weight_unit_code" property="weightUnitCode" jdbcType="VARCHAR" />
    <result column="weight_qty" property="weightQty" jdbcType="DECIMAL" />
    <result column="actual_weight_qty" property="actualWeightQty" jdbcType="DECIMAL" />
    <result column="stock_status" property="stockStatus" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="write_off" property="writeOff" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="modify_user_id" property="modifyUserId" jdbcType="INTEGER" />
    <result column="vendor_code" property="vendorCode" jdbcType="VARCHAR"/>
	<result column="vendor_name" property="vendorName" jdbcType="VARCHAR"/>
	<result column="ext0" property="ext0" jdbcType="VARCHAR"/>
	<result column="ext1" property="ext1" jdbcType="VARCHAR"/>
	<result column="ext2" property="ext2" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List" >
    input_id, receipt_code, receipt_rid, receipt_type, receipt_status, mat_code, unit_code,
    bundle_code, shipping_ref, heat_code, skid_code, corp_code, item_numb, lot_numb,
    wh_code, type_code, bin_code, receipt_unit_code, receipt_qty, weight_unit_code, weight_qty,
    actual_weight_qty, stock_status, is_delete, write_off, create_time, modify_time,
    create_user_id, modify_user_id,vendor_code,vendor_name,ext0,ext1,ext2
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sinobec_biz_input
    where input_id = #{inputId,jdbcType=INTEGER}
  </select>
    <select id="selectInputList" resultType="com.inossem.wms.vo.sinobec.SinobecBizInputVo">
        SELECT
            input.input_id,
            input.receipt_code,
            input.receipt_rid,
            input.receipt_type,
            input.receipt_status,
            input.mat_code,
            input.unit_code,
            input.bundle_code,
            input.shipping_ref,
            input.heat_code,
            input.skid_code,
            input.corp_code,
            input.item_numb,
            input.lot_numb,
            input.wh_code,
            input.type_code,
            input.bin_code,
            input.receipt_unit_code,
            du.unit_name receipt_unit_name,
            input.receipt_qty,
            input.weight_unit_code,
            du2.unit_name weight_unit_name,
            input.weight_qty,
            input.actual_weight_qty,
            input.stock_status,
            input.is_delete,
            input.write_off,
            input.vendor_code,
            input.vendor_name,
            m.mat_name,
            m.mat_ext1,
            input.create_time,
            input.modify_time,
            input.remark,
            input.ext0, 
            input.ext1, 
            input.ext2,
            input.ext3,
            input.ext4,
            input.ext5,
            input.ext6,
            input.ext7,
            input.ext8,
            input.ext9,
            input.ext10,
            input.ext11,
            input.ext12,
            input.ext13,
            input.ext14,
            input.ext15
             
        FROM sinobec_biz_input input
        inner join dic_material m  on input.mat_code = m.mat_code
        left join dic_unit du on input.receipt_unit_code = du.unit_code
        left join dic_unit du2 on input.weight_unit_code = du2.unit_code
        WHERE input.is_delete = 0
        and input.receipt_type = #{receiptType}
        <if test="receiptCode !=null and receiptCode !='' ">
        	and input.receipt_code = #{receiptCode}
        </if>
        <if test="shippingRef !=null and shippingRef !='' ">
        	<!-- and input.shipping_ref = #{shippingRef} -->
        	and input.ext0 = #{shippingRef}
        </if>
        
        
    </select>
    <select id="selectInputListByShipping" resultType="com.inossem.wms.vo.sinobec.SinobecBizInputVo">
        SELECT
            input.input_id,
            input.receipt_code,
            input.receipt_rid,
            input.receipt_type,
            input.receipt_status,
            input.mat_code,
            input.unit_code,
            input.bundle_code,
            input.shipping_ref,
            input.heat_code,
            input.skid_code,
            input.corp_code,
            input.item_numb,
            input.lot_numb,
            input.wh_code,
            input.type_code,
            input.bin_code,
            input.receipt_unit_code,
            du.unit_name receipt_unit_name,
            input.receipt_qty,
            input.weight_unit_code,
            du2.unit_name weight_unit_name,
            input.weight_qty,
            input.actual_weight_qty,
            input.stock_status,
            input.is_delete,
            input.write_off,
            input.vendor_code,
            input.vendor_name,
            m.mat_name,
            input.create_time,
            input.modify_time,
            input.remark,
            input.ext0, 
            input.ext1, 
            input.ext2 
        FROM sinobec_biz_input input
        inner join dic_material m  on input.mat_code = m.mat_code
        left join dic_unit du on input.receipt_unit_code = du.unit_code
        left join dic_unit du2 on input.weight_unit_code = du2.unit_code
        WHERE input.is_delete = 0
        and input.receipt_type = #{receiptType}
        <if test="shippingRef !=null and shippingRef !='' ">
        	<!-- and input.shipping_ref = #{shippingRef} -->
        	and input.ext0 = #{shippingRef}
        </if>
        
        
    </select>
    <select id="selectInputListOnPaging" resultType="com.inossem.wms.vo.sinobec.SinobecBizInputVo">
        SELECT
        input.input_id,
        input.receipt_code,
        input.receipt_rid,
        input.receipt_type,
        input.receipt_status,
        input.mat_code,
        input.unit_code,
        input.bundle_code,
        input.shipping_ref,
        input.heat_code,
        input.skid_code,
        input.corp_code,
        input.item_numb,
        input.lot_numb,
        input.wh_code,
        <!-- s.type_code, -->
        input.bin_code,
        input.receipt_unit_code,
        input.receipt_qty,
        input.weight_unit_code,
        <!-- s.weight_qty, -->
        input.actual_weight_qty,
        input.stock_status,
        input.is_delete,
        input.write_off,
        input.create_time,
        input.remark,
        input.ext0,
        input.ext1,
        input.ext2,
        input.ext3,
        input.ext4,
        input.ext5,
        input.ext6,
        input.ext7,
        input.ext8,
        input.ext9,
        input.ext10,
        input.ext11,
        input.ext12,
        input.ext13,
        input.ext14,
        input.ext15,
        m.mat_name
        FROM sinobec_biz_input input
        inner join dic_material m on input.mat_code = m.mat_code
        <!-- inner join sinobec_stock s on input.shipping_ref = s.shipping_ref and s.bundle_code = input.bundle_code -->
        <!-- 查询已经收货的单据为啥还要连接个库存表？暂时注销 -->
        WHERE input.is_delete = 0 and input.receipt_status = 90
        <if test="receiptCode != null and receiptCode != ''">
            and receipt_code = #{receiptCode ,jdbcType=VARCHAR}
        </if>
        <if test="corpCode != null and corpCode != ''">
            and corp_code = #{corpCode ,jdbcType=VARCHAR}
        </if>
        <if test="receiptType != null ">
            and receipt_type = #{receiptType ,jdbcType=INTEGER}
        </if>
        <if test="shippingRef != null and shippingRef != ''">
            <!-- and input.shipping_ref = #{shippingRef ,jdbcType=VARCHAR} -->
            and input.ext0 = #{shippingRef ,jdbcType=VARCHAR}
        </if>
        <if test="createStartTime != null and createStartTime != ''">
            and UNIX_TIMESTAMP(input.create_time) <![CDATA[ >= ]]> UNIX_TIMESTAMP(#{createStartTime,jdbcType=VARCHAR})
        </if>
        <if test="createEndTime != null and createEndTime != ''">
            and UNIX_TIMESTAMP(input.create_time) <![CDATA[ < ]]> UNIX_TIMESTAMP(DATE_ADD(#{createEndTime,jdbcType=VARCHAR}, INTERVAL 1 day))
        </if>
        <if test="whCode != null and whCode != ''">
            and input.wh_code = #{whCode ,jdbcType=VARCHAR}
        </if>
    </select>
    <select id="selectInputListWithStockOnPaging" resultType="com.inossem.wms.vo.sinobec.SinobecBizInputVo">
        SELECT
        input.input_id,
        input.receipt_code,
        input.receipt_rid,
        input.receipt_type,
        input.receipt_status,
        input.mat_code,
        input.unit_code,
        input.bundle_code,
        input.shipping_ref,
        input.heat_code,
        input.skid_code,
        input.corp_code,
        input.item_numb,
        input.lot_numb,
        input.wh_code,
        s.type_code,
        input.bin_code,
        input.receipt_unit_code,
        input.receipt_qty,
        input.weight_unit_code,
        s.weight_qty,
        input.actual_weight_qty,
        input.stock_status,
        input.is_delete,
        input.write_off,
        input.create_time,
        input.remark,
        m.mat_name
        FROM sinobec_biz_input input
        inner join dic_material m on input.mat_code = m.mat_code
        inner join sinobec_stock s on input.shipping_ref = s.shipping_ref and s.bundle_code = input.bundle_code
        WHERE input.is_delete = 0
        <if test="receiptCode != null and receiptCode != ''">
            and receipt_code = #{receiptCode ,jdbcType=VARCHAR}
        </if>
        <if test="corpCode != null and corpCode != ''">
            and corp_code = #{corpCode ,jdbcType=VARCHAR}
        </if>
        <if test="whCode != null and whCode != ''">
            and input.wh_code = #{whCode ,jdbcType=VARCHAR}
        </if>
        <if test="receiptType != null ">
            and receipt_type = #{receiptType ,jdbcType=INTEGER}
        </if>
        <if test="shippingRef != null and shippingRef != ''">
            and input.shipping_ref = #{shippingRef ,jdbcType=VARCHAR}
        </if>
        <if test="createStartTime != null and createStartTime != ''">
            and UNIX_TIMESTAMP(input.create_time) <![CDATA[ >= ]]> UNIX_TIMESTAMP(#{createStartTime,jdbcType=VARCHAR})
        </if>
        <if test="createEndTime != null and createEndTime != ''">
            and UNIX_TIMESTAMP(input.create_time) <![CDATA[ < ]]> UNIX_TIMESTAMP(DATE_ADD(#{createEndTime,jdbcType=VARCHAR}, INTERVAL 1 day))
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sinobec_biz_input
    where input_id = #{inputId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteSavedOrderList">
        delete from sinobec_biz_input
        where receipt_status = 20
        and input_id in
            (
                <foreach collection="list" separator="," item="item" index="index">
                    #{item.inputId,jdbcType=INTEGER}
                </foreach>
            )
    </delete>
    <insert id="insert" parameterType="com.inossem.wms.model.sinobec.input.SinobecBizInput" >
    insert into sinobec_biz_input (input_id, receipt_code, receipt_rid,
      receipt_type, receipt_status, mat_code,
      unit_code, bundle_code, shipping_ref,
      heat_code, skid_code, corp_code,
      item_numb, lot_numb, wh_code,
      type_code, bin_code, receipt_unit_code,
      receipt_qty, weight_unit_code, weight_qty,
      actual_weight_qty, stock_status, is_delete,
      write_off, create_time, modify_time,
      create_user_id, modify_user_id)
    values (#{inputId,jdbcType=INTEGER}, #{receiptCode,jdbcType=VARCHAR}, #{receiptRid,jdbcType=VARCHAR},
      #{receiptType,jdbcType=INTEGER}, #{receiptStatus,jdbcType=TINYINT}, #{matCode,jdbcType=VARCHAR},
      #{unitCode,jdbcType=VARCHAR}, #{bundleCode,jdbcType=VARCHAR}, #{shippingRef,jdbcType=VARCHAR},
      #{heatCode,jdbcType=VARCHAR}, #{skidCode,jdbcType=VARCHAR}, #{corpCode,jdbcType=VARCHAR},
      #{itemNumb,jdbcType=VARCHAR}, #{lotNumb,jdbcType=VARCHAR}, #{whCode,jdbcType=VARCHAR},
      #{typeCode,jdbcType=VARCHAR}, #{binCode,jdbcType=VARCHAR}, #{receiptUnitCode,jdbcType=VARCHAR},
      #{receiptQty,jdbcType=DECIMAL}, #{weightUnitCode,jdbcType=VARCHAR}, #{weightQty,jdbcType=DECIMAL},
      #{actualWeightQty,jdbcType=DECIMAL}, #{stockStatus,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT},
      #{writeOff,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP},
      #{createUserId,jdbcType=INTEGER}, #{modifyUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.inossem.wms.model.sinobec.input.SinobecBizInput" >
    insert into sinobec_biz_input
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="inputId != null" >
        input_id,
      </if>
      <if test="receiptCode != null" >
        receipt_code,
      </if>
      <if test="receiptRid != null" >
        receipt_rid,
      </if>
      <if test="receiptType != null" >
        receipt_type,
      </if>
      <if test="receiptStatus != null" >
        receipt_status,
      </if>
      <if test="matCode != null" >
        mat_code,
      </if>
      <if test="unitCode != null" >
        unit_code,
      </if>
      <if test="bundleCode != null" >
        bundle_code,
      </if>
      <if test="shippingRef != null" >
        shipping_ref,
      </if>
      <if test="heatCode != null" >
        heat_code,
      </if>
      <if test="skidCode != null" >
        skid_code,
      </if>
      <if test="corpCode != null" >
        corp_code,
      </if>
      <if test="itemNumb != null" >
        item_numb,
      </if>
      <if test="lotNumb != null" >
        lot_numb,
      </if>
      <if test="whCode != null" >
        wh_code,
      </if>
      <if test="typeCode != null" >
        type_code,
      </if>
      <if test="binCode != null" >
        bin_code,
      </if>
      <if test="receiptUnitCode != null" >
        receipt_unit_code,
      </if>
      <if test="receiptQty != null" >
        receipt_qty,
      </if>
      <if test="weightUnitCode != null" >
        weight_unit_code,
      </if>
      <if test="weightQty != null" >
        weight_qty,
      </if>
      <if test="actualWeightQty != null" >
        actual_weight_qty,
      </if>
      <if test="stockStatus != null" >
        stock_status,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="writeOff != null" >
        write_off,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="modifyUserId != null" >
        modify_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="inputId != null" >
        #{inputId,jdbcType=INTEGER},
      </if>
      <if test="receiptCode != null" >
        #{receiptCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptRid != null" >
        #{receiptRid,jdbcType=VARCHAR},
      </if>
      <if test="receiptType != null" >
        #{receiptType,jdbcType=INTEGER},
      </if>
      <if test="receiptStatus != null" >
        #{receiptStatus,jdbcType=TINYINT},
      </if>
      <if test="matCode != null" >
        #{matCode,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null" >
        #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="bundleCode != null" >
        #{bundleCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingRef != null" >
        #{shippingRef,jdbcType=VARCHAR},
      </if>
      <if test="heatCode != null" >
        #{heatCode,jdbcType=VARCHAR},
      </if>
      <if test="skidCode != null" >
        #{skidCode,jdbcType=VARCHAR},
      </if>
      <if test="corpCode != null" >
        #{corpCode,jdbcType=VARCHAR},
      </if>
      <if test="itemNumb != null" >
        #{itemNumb,jdbcType=VARCHAR},
      </if>
      <if test="lotNumb != null" >
        #{lotNumb,jdbcType=VARCHAR},
      </if>
      <if test="whCode != null" >
        #{whCode,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="binCode != null" >
        #{binCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptUnitCode != null" >
        #{receiptUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptQty != null" >
        #{receiptQty,jdbcType=DECIMAL},
      </if>
      <if test="weightUnitCode != null" >
        #{weightUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="weightQty != null" >
        #{weightQty,jdbcType=DECIMAL},
      </if>
      <if test="actualWeightQty != null" >
        #{actualWeightQty,jdbcType=DECIMAL},
      </if>
      <if test="stockStatus != null" >
        #{stockStatus,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="writeOff != null" >
        #{writeOff,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyUserId != null" >
        #{modifyUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
    <insert id="insertInputList">
        insert into sinobec_biz_input
        (receipt_code, receipt_rid,
         receipt_type, receipt_status, mat_code,
         unit_code, bundle_code, shipping_ref,
         heat_code, skid_code, corp_code,
         item_numb, lot_numb, wh_code,
         receipt_unit_code,
         receipt_qty, weight_unit_code, weight_qty,
         actual_weight_qty,
         create_user_id, modify_user_id,stock_status,
         vendor_code,vendor_name,remark,ext0,ext1,ext2,ext3,ext4,ext5,ext6,ext7,ext8,ext9,ext10,ext11,ext12,ext13,ext14,ext15
         )
         values 
        <foreach collection="list" separator="," item="item" index="index">
            (
                       #{item.receiptCode,jdbcType=VARCHAR},
                       #{item.receiptRid,jdbcType=VARCHAR},
                       #{item.receiptType,jdbcType=INTEGER},
                       #{item.receiptStatus,jdbcType=TINYINT},
                       #{item.matCode,jdbcType=VARCHAR},
                       #{item.unitCode,jdbcType=VARCHAR},
                       #{item.bundleCode,jdbcType=VARCHAR},
                       #{item.shippingRef,jdbcType=VARCHAR},
                       #{item.heatCode,jdbcType=VARCHAR},
                       #{item.skidCode,jdbcType=VARCHAR},
                       #{item.corpCode,jdbcType=VARCHAR},
                       #{item.itemNumb,jdbcType=VARCHAR},
                       #{item.lotNumb,jdbcType=VARCHAR},
                       #{item.whCode,jdbcType=VARCHAR},
                       #{item.receiptUnitCode,jdbcType=VARCHAR},
                       #{item.receiptQty,jdbcType=DECIMAL},
                       #{item.weightUnitCode,jdbcType=VARCHAR},
                       #{item.weightQty,jdbcType=DECIMAL},
                       #{item.actualWeightQty,jdbcType=DECIMAL},
                       #{item.createUserId,jdbcType=INTEGER},
                       #{item.modifyUserId,jdbcType=INTEGER},
                       #{item.stockStatus,jdbcType=VARCHAR},
                       ifnull(#{item.vendorCode,jdbcType=VARCHAR},''),
                       ifnull(#{item.vendorName,jdbcType=VARCHAR},''),
                       ifnull(#{item.remark,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext0,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext1,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext2,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext3,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext4,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext5,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext6,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext7,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext8,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext9,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext10,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext11,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext12,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext13,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext14,jdbcType=VARCHAR},''),
                       ifnull(#{item.ext15,jdbcType=VARCHAR},'')
                   )
        </foreach>

    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.sinobec.input.SinobecBizInput" >
    update sinobec_biz_input
    <set >
      <if test="receiptCode != null" >
        receipt_code = #{receiptCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptRid != null" >
        receipt_rid = #{receiptRid,jdbcType=VARCHAR},
      </if>
      <if test="receiptType != null" >
        receipt_type = #{receiptType,jdbcType=INTEGER},
      </if>
      <if test="receiptStatus != null" >
        receipt_status = #{receiptStatus,jdbcType=TINYINT},
      </if>
      <if test="matCode != null" >
        mat_code = #{matCode,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null" >
        unit_code = #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="bundleCode != null" >
        bundle_code = #{bundleCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingRef != null" >
        shipping_ref = #{shippingRef,jdbcType=VARCHAR},
      </if>
      <if test="heatCode != null" >
        heat_code = #{heatCode,jdbcType=VARCHAR},
      </if>
      <if test="skidCode != null" >
        skid_code = #{skidCode,jdbcType=VARCHAR},
      </if>
      <if test="corpCode != null" >
        corp_code = #{corpCode,jdbcType=VARCHAR},
      </if>
      <if test="itemNumb != null" >
        item_numb = #{itemNumb,jdbcType=VARCHAR},
      </if>
      <if test="lotNumb != null" >
        lot_numb = #{lotNumb,jdbcType=VARCHAR},
      </if>
      <if test="whCode != null" >
        wh_code = #{whCode,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="binCode != null" >
        bin_code = #{binCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptUnitCode != null" >
        receipt_unit_code = #{receiptUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptQty != null" >
        receipt_qty = #{receiptQty,jdbcType=DECIMAL},
      </if>
      <if test="weightUnitCode != null" >
        weight_unit_code = #{weightUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="weightQty != null" >
        weight_qty = #{weightQty,jdbcType=DECIMAL},
      </if>
      <if test="actualWeightQty != null" >
        actual_weight_qty = #{actualWeightQty,jdbcType=DECIMAL},
      </if>
      <if test="stockStatus != null" >
        stock_status = #{stockStatus,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="writeOff != null" >
        write_off = #{writeOff,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyUserId != null" >
        modify_user_id = #{modifyUserId,jdbcType=INTEGER},
      </if>
    </set>
    where input_id = #{inputId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.sinobec.input.SinobecBizInput" >
    update sinobec_biz_input
    set receipt_code = #{receiptCode,jdbcType=VARCHAR},
      receipt_rid = #{receiptRid,jdbcType=VARCHAR},
      receipt_type = #{receiptType,jdbcType=INTEGER},
      receipt_status = #{receiptStatus,jdbcType=TINYINT},
      mat_code = #{matCode,jdbcType=VARCHAR},
      unit_code = #{unitCode,jdbcType=VARCHAR},
      bundle_code = #{bundleCode,jdbcType=VARCHAR},
      shipping_ref = #{shippingRef,jdbcType=VARCHAR},
      heat_code = #{heatCode,jdbcType=VARCHAR},
      skid_code = #{skidCode,jdbcType=VARCHAR},
      corp_code = #{corpCode,jdbcType=VARCHAR},
      item_numb = #{itemNumb,jdbcType=VARCHAR},
      lot_numb = #{lotNumb,jdbcType=VARCHAR},
      wh_code = #{whCode,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      bin_code = #{binCode,jdbcType=VARCHAR},
      receipt_unit_code = #{receiptUnitCode,jdbcType=VARCHAR},
      receipt_qty = #{receiptQty,jdbcType=DECIMAL},
      weight_unit_code = #{weightUnitCode,jdbcType=VARCHAR},
      weight_qty = #{weightQty,jdbcType=DECIMAL},
      actual_weight_qty = #{actualWeightQty,jdbcType=DECIMAL},
      stock_status = #{stockStatus,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT},
      write_off = #{writeOff,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      modify_user_id = #{modifyUserId,jdbcType=INTEGER}
    where input_id = #{inputId,jdbcType=INTEGER}
  </update>
    <update id="updateActualWeightQty" parameterType="com.inossem.wms.model.sinobec.input.SinobecBizInput">
        <foreach collection="list" index="index" item="item" separator=";">
            update sinobec_biz_input
            set  actual_weight_qty = #{item.actualWeightQty,jdbcType=DECIMAL},
            <!-- <if test="remark != null and remark != '' ">
            	, remark = #{item.remark,jdbcType=VARCHAR}
            </if> -->
            remark = #{item.remark,jdbcType=VARCHAR}
            where receipt_code = #{item.receiptCode,jdbcType=VARCHAR}
            and receipt_rid = #{item.receiptRid,jdbcType=VARCHAR}
            and receipt_type = #{item.receiptType,jdbcType=INTEGER}
            and shipping_ref = #{item.shippingRef,jdbcType=VARCHAR}
            and corp_code = #{item.corpCode,jdbcType=VARCHAR}
            and bundle_code = #{item.bundleCode,jdbcType=VARCHAR}
        </foreach>
    </update>
    <update id="updateActualWeightQtyAndStatus">
        <foreach collection="list" index="index" item="item" separator=";">
            update sinobec_biz_input
            set  actual_weight_qty = #{item.actualWeightQty,jdbcType=DECIMAL},
            receipt_status = #{item.receiptStatus,jdbcType=INTEGER}
            where receipt_code = #{item.receiptCode,jdbcType=VARCHAR}
            and receipt_rid = #{item.receiptRid,jdbcType=VARCHAR}
            and receipt_type = #{item.receiptType,jdbcType=INTEGER}
            and shipping_ref = #{item.shippingRef,jdbcType=VARCHAR}
            and corp_code = #{item.corpCode,jdbcType=VARCHAR}
            and bundle_code = #{item.bundleCode,jdbcType=VARCHAR}
        </foreach>
    </update>
</mapper>
