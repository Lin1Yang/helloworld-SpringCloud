<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.inossem.wms.dao.sinobec.SinobecBizOutputMapper" >
  <resultMap id="BaseResultMap" type="com.inossem.wms.model.sinobec.SinobecBizOutput" >
    <id column="output_id" property="outputId" jdbcType="INTEGER" />
    <result column="receipt_code" property="receiptCode" jdbcType="VARCHAR" />
    <result column="receipt_rid" property="receiptRid" jdbcType="VARCHAR" />
    <result column="receipt_bid" property="receiptBid" jdbcType="VARCHAR" />
    <result column="receipt_type" property="receiptType" jdbcType="INTEGER" />
    <result column="receipt_status" property="receiptStatus" jdbcType="TINYINT" />
    <result column="mat_code" property="matCode" jdbcType="VARCHAR" />
    <result column="unit_code" property="unitCode" jdbcType="VARCHAR" />
    <result column="bundle_code" property="bundleCode" jdbcType="VARCHAR" />
    <result column="shipping_ref" property="shippingRef" jdbcType="VARCHAR" />
    <result column="heat_code" property="heatCode" jdbcType="VARCHAR" />
    <result column="skid_code" property="skidCode" jdbcType="VARCHAR" />
    <result column="corp_code" property="corpCode" jdbcType="VARCHAR" />
    <result column="item_numb" property="itemNumb" jdbcType="VARCHAR" />
    <result column="lot_numb" property="lotNumb" jdbcType="VARCHAR" />
    <result column="wh_code" property="whCode" jdbcType="VARCHAR" />
    <result column="type_code" property="typeCode" jdbcType="VARCHAR" />
    <result column="bin_code" property="binCode" jdbcType="VARCHAR" />
    <result column="stock_status" property="stockStatus" jdbcType="VARCHAR" />
    <result column="stock_id" property="stockId" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="write_off" property="writeOff" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="modify_user_id" property="modifyUserId" jdbcType="INTEGER" />
    <result column="receipt_unit_code" property="receiptUnitCode" jdbcType="VARCHAR" />
    <result column="receipt_qty" property="receiptQty" jdbcType="DECIMAL" />
    <result column="weight_unit_code" property="weightUnitCode" jdbcType="VARCHAR" />
    <result column="weight_qty" property="weightQty" jdbcType="DECIMAL" />
    <result column="trailler_number" property="traillerNumber" jdbcType="VARCHAR" />
    <result column="vendor_code" property="vendorCode" jdbcType="VARCHAR"/>
	<result column="vendor_name" property="vendorName" jdbcType="VARCHAR"/>
	<result column="ext0" property="ext0" jdbcType="VARCHAR"/>
	<result column="ext1" property="ext1" jdbcType="VARCHAR"/>
	<result column="ext2" property="ext2" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List" >
    output_id, receipt_code, receipt_rid, receipt_bid, receipt_type, receipt_status,
    mat_code, unit_code, bundle_code, shipping_ref, heat_code, skid_code, corp_code,
    item_numb, lot_numb, wh_code, type_code, bin_code, stock_status, stock_id, is_delete,
    write_off, create_time, modify_time, create_user_id, modify_user_id, receipt_unit_code,
    receipt_qty, weight_unit_code, weight_qty,trailler_number,vendor_code,vendor_name,
    ext0, ext1, ext2
  </sql>
  <resultMap id="BaseResultMapVo" extends="BaseResultMap" type="com.inossem.wms.model.sinobec.out.OutputDaoVo" >
    <!--其他参数-->
  </resultMap>
  <select id="queryInfoByInfoAndStatus" resultMap="BaseResultMapVo"  >
    select
    	bo.output_id, bo.receipt_code, bo.receipt_rid, bo.receipt_bid, bo.receipt_type, bo.receipt_status,
	    bo.mat_code, bo.unit_code, bo.bundle_code, bo.shipping_ref, bo.heat_code, bo.skid_code, bo.corp_code,
	    bo.item_numb, bo.lot_numb, bo.wh_code, bo.type_code, bo.bin_code, bo.stock_status, bo.stock_id, bo.is_delete,
	    bo.write_off, bo.create_time, bo.modify_time, bo.create_user_id, bo.modify_user_id, bo.receipt_unit_code,
	    bo.receipt_qty, bo.weight_unit_code, bo.weight_qty,bo.trailler_number,bo.vendor_code,bo.vendor_name,
	    bo.ext0,bo.ext1,bo.ext2,bo.ext3,bo.ext4,bo.ext5,bo.ext6,bo.ext7,bo.ext8,bo.ext9,
	    bo.ext10,bo.ext11,bo.ext12,bo.ext13,bo.ext14,bo.ext15,
    	m.mat_name,m.mat_ext1
	FROM
		sinobec_biz_output bo
	INNER JOIN dic_material m on bo.mat_code = m.mat_code
    and bo.receipt_status=#{receiptStatus}
    and  bo.receipt_code = #{receiptCode}
  </select>

  <select id="queryInfoByReceiptCode" resultMap="BaseResultMapVo"  >
    select
    	bo.output_id, bo.receipt_code, bo.receipt_rid, bo.receipt_bid, bo.receipt_type, bo.receipt_status,
	    bo.mat_code, bo.unit_code, bo.bundle_code, bo.shipping_ref, bo.heat_code, bo.skid_code, bo.corp_code,
	    bo.item_numb, bo.lot_numb, bo.wh_code, bo.type_code, bo.bin_code, bo.stock_status, bo.stock_id, bo.is_delete,
	    bo.write_off, bo.create_time, bo.modify_time, bo.create_user_id, bo.modify_user_id, bo.receipt_unit_code,
	    bo.receipt_qty, bo.weight_unit_code, bo.weight_qty,bo.trailler_number,bo.vendor_code,bo.vendor_name,
	    bo.ext0,bo.ext1,bo.ext2,bo.ext3,bo.ext4,bo.ext5,bo.ext6,bo.ext7,bo.ext8,bo.ext9,
	    bo.ext10,bo.ext11,bo.ext12,bo.ext13,bo.ext14,bo.ext15
	FROM
		sinobec_biz_output bo
	where bo.receipt_code = #{receiptCode}
  </select>

  <select id="queryInfoByCoAndStatus" resultMap="BaseResultMapVo"  >
    select
    	bo.output_id, bo.receipt_code, bo.receipt_rid, bo.receipt_bid, bo.receipt_type, bo.receipt_status,
	    bo.mat_code, bo.unit_code, bo.bundle_code, bo.shipping_ref, bo.heat_code, bo.skid_code, bo.corp_code,
	    bo.item_numb, bo.lot_numb, bo.wh_code, bo.type_code, bo.bin_code, bo.stock_status, bo.stock_id, bo.is_delete,
	    bo.write_off, bo.create_time, bo.modify_time, bo.create_user_id, bo.modify_user_id, bo.receipt_unit_code,
	    bo.receipt_qty, bo.weight_unit_code, bo.weight_qty,bo.trailler_number,bo.vendor_code,bo.vendor_name,
    	m.mat_name
	FROM
		sinobec_biz_output bo
	INNER JOIN dic_material m on bo.mat_code = m.mat_code
    where bo.is_delete=0 and bo.write_off=0
    and bo.receipt_status=#{receiptStatus}
    <if test="co.soCode != null" >
      and  bo.receipt_code=#{co.soCode}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sinobec_biz_output
    where output_id = #{outputId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sinobec_biz_output
    where output_id = #{outputId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.inossem.wms.model.sinobec.SinobecBizOutput" >
    insert into sinobec_biz_output (output_id, receipt_code, receipt_rid,
      receipt_bid, receipt_type, receipt_status,
      mat_code, unit_code, bundle_code,
      shipping_ref, heat_code, skid_code,
      corp_code, item_numb, lot_numb,
      wh_code, type_code, bin_code,
      stock_status, stock_id, is_delete,
      write_off, create_time, modify_time,
      create_user_id, modify_user_id, receipt_unit_code,
      receipt_qty, weight_unit_code, weight_qty,trailler_number
      )
    values (#{outputId,jdbcType=INTEGER}, #{receiptCode,jdbcType=VARCHAR}, #{receiptRid,jdbcType=VARCHAR},
      #{receiptBid,jdbcType=VARCHAR}, #{receiptType,jdbcType=INTEGER}, #{receiptStatus,jdbcType=TINYINT},
      #{matCode,jdbcType=VARCHAR}, #{unitCode,jdbcType=VARCHAR}, #{bundleCode,jdbcType=VARCHAR},
      #{shippingRef,jdbcType=VARCHAR}, #{heatCode,jdbcType=VARCHAR}, #{skidCode,jdbcType=VARCHAR},
      #{corpCode,jdbcType=VARCHAR}, #{itemNumb,jdbcType=VARCHAR}, #{lotNumb,jdbcType=VARCHAR},
      #{whCode,jdbcType=VARCHAR}, #{typeCode,jdbcType=VARCHAR}, #{binCode,jdbcType=VARCHAR},
      #{stockStatus,jdbcType=VARCHAR}, #{stockId,jdbcType=INTEGER}, #{isDelete,jdbcType=TINYINT},
      #{writeOff,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP},
      #{createUserId,jdbcType=INTEGER}, #{modifyUserId,jdbcType=INTEGER}, #{receiptUnitCode,jdbcType=VARCHAR},
      #{receiptQty,jdbcType=DECIMAL}, #{weightUnitCode,jdbcType=VARCHAR}, #{weightQty,jdbcType=DECIMAL},#{traillerNumber,jdbcType=VARCHAR}
      )
  </insert>

  <delete id="outputDelete">
    delete from sinobec_biz_output
    where receipt_status = 20
    and output_id in
    (
    <foreach collection="list" separator="," item="item" index="index">
      #{item.outputId,jdbcType=INTEGER}
    </foreach>
    )
  </delete>

  <insert id="insertList" parameterType="list">
    insert into sinobec_biz_output (output_id, receipt_code, receipt_rid,
    receipt_bid, receipt_type, receipt_status,
    mat_code, unit_code, bundle_code,
    shipping_ref, heat_code, skid_code,
    corp_code, item_numb, lot_numb,
    wh_code, type_code, bin_code,
    stock_status, stock_id, is_delete,
    write_off, create_time, modify_time,
    create_user_id, modify_user_id, receipt_unit_code,
    receipt_qty, weight_unit_code, weight_qty,trailler_number,
    vendor_code,vendor_name,ext0,ext1,ext2,ext3,ext4,ext5,ext6,ext7,ext8,ext9,ext10,ext11,ext12,ext13,ext14,ext15
    )
  values
    <foreach collection="list" item="item" index= "index" separator =",">
      (
       #{item.outputId,jdbcType=INTEGER},
      ifnull(#{item.receiptCode,jdbcType=VARCHAR},''),
      ifnull(#{item.receiptRid,jdbcType=VARCHAR},''),
      ifnull(#{item.receiptBid,jdbcType=VARCHAR},''), ifnull(#{item.receiptType,jdbcType=INTEGER},'0'),ifnull( #{item.receiptStatus,jdbcType=TINYINT},''),
      ifnull( #{item.matCode,jdbcType=VARCHAR},''), ifnull(#{item.unitCode,jdbcType=VARCHAR},''),ifnull( #{item.bundleCode,jdbcType=VARCHAR},''),
      ifnull( #{item.shippingRef,jdbcType=VARCHAR},''), ifnull(#{item.heatCode,jdbcType=VARCHAR},''), ifnull(#{item.skidCode,jdbcType=VARCHAR},''),
      ifnull(#{item.corpCode,jdbcType=VARCHAR},''), ifnull(#{item.itemNumb,jdbcType=VARCHAR},''), ifnull(#{item.lotNumb,jdbcType=VARCHAR},''),
      ifnull(#{item.whCode,jdbcType=VARCHAR},''), ifnull(#{item.typeCode,jdbcType=VARCHAR},''), ifnull(#{item.binCode,jdbcType=VARCHAR},''),
      ifnull(#{item.stockStatus,jdbcType=VARCHAR},''), ifnull(#{item.stockId,jdbcType=INTEGER},'0'), ifnull(#{item.isDelete,jdbcType=TINYINT},'0'),
      ifnull(#{item.writeOff,jdbcType=TINYINT},'0'),  ifnull(#{item.createTime,jdbcType=TIMESTAMP},''), ifnull(#{item.modifyTime,jdbcType=TIMESTAMP},''),
      ifnull(#{item.createUserId,jdbcType=INTEGER},'0'), ifnull(#{item.modifyUserId,jdbcType=INTEGER},'0'), ifnull(#{item.receiptUnitCode,jdbcType=VARCHAR},''),
      ifnull(#{item.receiptQty,jdbcType=DECIMAL},'0'), ifnull(#{item.weightUnitCode,jdbcType=VARCHAR},''), ifnull(#{item.weightQty,jdbcType=DECIMAL},'0'),
      ifnull(#{item.traillerNumber,jdbcType=VARCHAR},''),
      ifnull(#{item.vendorCode,jdbcType=VARCHAR},""),
      ifnull(#{item.vendorName,jdbcType=VARCHAR},""),
      ifnull(#{item.ext0,jdbcType=VARCHAR},""),
      ifnull(#{item.ext1,jdbcType=VARCHAR},""),
      ifnull(#{item.ext2,jdbcType=VARCHAR},""),
      ifnull(#{item.ext3,jdbcType=VARCHAR},""),
      ifnull(#{item.ext4,jdbcType=VARCHAR},""),
      ifnull(#{item.ext5,jdbcType=VARCHAR},""),
      ifnull(#{item.ext6,jdbcType=VARCHAR},""),
      ifnull(#{item.ext7,jdbcType=VARCHAR},""),
      ifnull(#{item.ext8,jdbcType=VARCHAR},""),
      ifnull(#{item.ext9,jdbcType=VARCHAR},""),
      ifnull(#{item.ext10,jdbcType=VARCHAR},""),
      ifnull(#{item.ext11,jdbcType=VARCHAR},""),
      ifnull(#{item.ext12,jdbcType=VARCHAR},""),
      ifnull(#{item.ext13,jdbcType=VARCHAR},""),
      ifnull(#{item.ext14,jdbcType=VARCHAR},""),
      ifnull(#{item.ext15,jdbcType=VARCHAR},"")
      )
  </foreach>
  </insert>


  <insert id="insertSelective" parameterType="com.inossem.wms.model.sinobec.SinobecBizOutput" >
    insert into sinobec_biz_output
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="outputId != null" >
        output_id,
      </if>
      <if test="receiptCode != null" >
        receipt_code,
      </if>
      <if test="receiptRid != null" >
        receipt_rid,
      </if>
      <if test="receiptBid != null" >
        receipt_bid,
      </if>
      <if test="receiptType != null" >
        receipt_type,
      </if>
      <if test="receiptStatus != null" >
        receipt_status,
      </if>
      <if test="matCode != null" >
        mat_code,
      </if>
      <if test="unitCode != null" >
        unit_code,
      </if>
      <if test="bundleCode != null" >
        bundle_code,
      </if>
      <if test="shippingRef != null" >
        shipping_ref,
      </if>
      <if test="heatCode != null" >
        heat_code,
      </if>
      <if test="skidCode != null" >
        skid_code,
      </if>
      <if test="corpCode != null" >
        corp_code,
      </if>
      <if test="itemNumb != null" >
        item_numb,
      </if>
      <if test="lotNumb != null" >
        lot_numb,
      </if>
      <if test="whCode != null" >
        wh_code,
      </if>
      <if test="typeCode != null" >
        type_code,
      </if>
      <if test="binCode != null" >
        bin_code,
      </if>
      <if test="stockStatus != null" >
        stock_status,
      </if>
      <if test="stockId != null" >
        stock_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="writeOff != null" >
        write_off,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="modifyUserId != null" >
        modify_user_id,
      </if>
      <if test="receiptUnitCode != null" >
        receipt_unit_code,
      </if>
      <if test="receiptQty != null" >
        receipt_qty,
      </if>
      <if test="weightUnitCode != null" >
        weight_unit_code,
      </if>
      <if test="weightQty != null" >
        weight_qty,
      </if>
      <if test="traillerNumber != null" >
        trailler_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="outputId != null" >
        #{outputId,jdbcType=INTEGER},
      </if>
      <if test="receiptCode != null" >
        #{receiptCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptRid != null" >
        #{receiptRid,jdbcType=VARCHAR},
      </if>
      <if test="receiptBid != null" >
        #{receiptBid,jdbcType=VARCHAR},
      </if>
      <if test="receiptType != null" >
        #{receiptType,jdbcType=INTEGER},
      </if>
      <if test="receiptStatus != null" >
        #{receiptStatus,jdbcType=TINYINT},
      </if>
      <if test="matCode != null" >
        #{matCode,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null" >
        #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="bundleCode != null" >
        #{bundleCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingRef != null" >
        #{shippingRef,jdbcType=VARCHAR},
      </if>
      <if test="heatCode != null" >
        #{heatCode,jdbcType=VARCHAR},
      </if>
      <if test="skidCode != null" >
        #{skidCode,jdbcType=VARCHAR},
      </if>
      <if test="corpCode != null" >
        #{corpCode,jdbcType=VARCHAR},
      </if>
      <if test="itemNumb != null" >
        #{itemNumb,jdbcType=VARCHAR},
      </if>
      <if test="lotNumb != null" >
        #{lotNumb,jdbcType=VARCHAR},
      </if>
      <if test="whCode != null" >
        #{whCode,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="binCode != null" >
        #{binCode,jdbcType=VARCHAR},
      </if>
      <if test="stockStatus != null" >
        #{stockStatus,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null" >
        #{stockId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="writeOff != null" >
        #{writeOff,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyUserId != null" >
        #{modifyUserId,jdbcType=INTEGER},
      </if>
      <if test="receiptUnitCode != null" >
        #{receiptUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptQty != null" >
        #{receiptQty,jdbcType=DECIMAL},
      </if>
      <if test="weightUnitCode != null" >
        #{weightUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="weightQty != null" >
        #{weightQty,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inossem.wms.model.sinobec.SinobecBizOutput" >
    update sinobec_biz_output
    <set >
      <if test="receiptCode != null" >
        receipt_code = #{receiptCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptRid != null" >
        receipt_rid = #{receiptRid,jdbcType=VARCHAR},
      </if>
      <if test="receiptBid != null" >
        receipt_bid = #{receiptBid,jdbcType=VARCHAR},
      </if>
      <if test="receiptType != null" >
        receipt_type = #{receiptType,jdbcType=INTEGER},
      </if>
      <if test="receiptStatus != null" >
        receipt_status = #{receiptStatus,jdbcType=TINYINT},
      </if>
      <if test="matCode != null" >
        mat_code = #{matCode,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null" >
        unit_code = #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="bundleCode != null" >
        bundle_code = #{bundleCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingRef != null" >
        shipping_ref = #{shippingRef,jdbcType=VARCHAR},
      </if>
      <if test="heatCode != null" >
        heat_code = #{heatCode,jdbcType=VARCHAR},
      </if>
      <if test="skidCode != null" >
        skid_code = #{skidCode,jdbcType=VARCHAR},
      </if>
      <if test="corpCode != null" >
        corp_code = #{corpCode,jdbcType=VARCHAR},
      </if>
      <if test="itemNumb != null" >
        item_numb = #{itemNumb,jdbcType=VARCHAR},
      </if>
      <if test="lotNumb != null" >
        lot_numb = #{lotNumb,jdbcType=VARCHAR},
      </if>
      <if test="whCode != null" >
        wh_code = #{whCode,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="binCode != null" >
        bin_code = #{binCode,jdbcType=VARCHAR},
      </if>
      <if test="stockStatus != null" >
        stock_status = #{stockStatus,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null" >
        stock_id = #{stockId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="writeOff != null" >
        write_off = #{writeOff,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyUserId != null" >
        modify_user_id = #{modifyUserId,jdbcType=INTEGER},
      </if>
      <if test="receiptUnitCode != null" >
        receipt_unit_code = #{receiptUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="receiptQty != null" >
        receipt_qty = #{receiptQty,jdbcType=DECIMAL},
      </if>
      <if test="weightUnitCode != null" >
        weight_unit_code = #{weightUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="weightQty != null" >
        weight_qty = #{weightQty,jdbcType=DECIMAL},
      </if>
      <if test="traillerNumber != null" >
        weight_qty = #{traillerNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where output_id = #{outputId,jdbcType=INTEGER}
  </update>
  <update id="updateByReceiptCode" parameterType="com.inossem.wms.model.sinobec.SinobecBizOutput" >
  update sinobec_biz_output
  <set>
    <if test="receiptStatus != null" >
      receipt_status = #{receiptStatus,jdbcType=TINYINT},
    </if>
    <if test="traillerNumber != null and traillerNumber != '' "  >
      trailler_number = #{traillerNumber,jdbcType=VARCHAR},
    </if>
  </set>
  where receipt_code = #{receiptCode,jdbcType=INTEGER}
    <if test="bundleList !=null and bundleList.size()>0">
      <!-- and bundle_code in -->
      and receipt_rid in
    <foreach collection="bundleList" open="(" close=")" index="index" item="item" separator=",">
        #{item}
    </foreach>
    </if>
  </update>

  <update id="updateByInsDoc"  parameterType="java.util.List">
    update sinobec_biz_output a
    inner join (
    <foreach collection="list" item="item" index="index" separator="UNION ALL" >
      select #{item.referReceiptCode} receipt_code,
      #{item.referReceiptRid} receipt_rid,
      #{item.referReceiptBid} receipt_bid,
      #{item.stockId} stock_id
    </foreach> )t on a.receipt_code = t.receipt_code and a.receipt_rid = t.receipt_rid and a.receipt_bid = t.receipt_bid
    set
    a.stock_id = t.stock_id
  </update>

  <update id="updateByPrimaryKey" parameterType="com.inossem.wms.model.sinobec.SinobecBizOutput" >
    update sinobec_biz_output
    set receipt_code = #{receiptCode,jdbcType=VARCHAR},
      receipt_rid = #{receiptRid,jdbcType=VARCHAR},
      receipt_bid = #{receiptBid,jdbcType=VARCHAR},
      receipt_type = #{receiptType,jdbcType=INTEGER},
      receipt_status = #{receiptStatus,jdbcType=TINYINT},
      mat_code = #{matCode,jdbcType=VARCHAR},
      unit_code = #{unitCode,jdbcType=VARCHAR},
      bundle_code = #{bundleCode,jdbcType=VARCHAR},
      shipping_ref = #{shippingRef,jdbcType=VARCHAR},
      heat_code = #{heatCode,jdbcType=VARCHAR},
      skid_code = #{skidCode,jdbcType=VARCHAR},
      corp_code = #{corpCode,jdbcType=VARCHAR},
      item_numb = #{itemNumb,jdbcType=VARCHAR},
      lot_numb = #{lotNumb,jdbcType=VARCHAR},
      wh_code = #{whCode,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      bin_code = #{binCode,jdbcType=VARCHAR},
      stock_status = #{stockStatus,jdbcType=VARCHAR},
      stock_id = #{stockId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      write_off = #{writeOff,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      modify_user_id = #{modifyUserId,jdbcType=INTEGER},
      receipt_unit_code = #{receiptUnitCode,jdbcType=VARCHAR},
      receipt_qty = #{receiptQty,jdbcType=DECIMAL},
      weight_unit_code = #{weightUnitCode,jdbcType=VARCHAR},
      weight_qty = #{weightQty,jdbcType=DECIMAL},
     trailler_number = #{traillerNumber,jdbcType=VARCHAR}
    where output_id = #{outputId,jdbcType=INTEGER}
  </update>


  <select id="queryListOnPaging" parameterType="com.inossem.wms.co.sinobec.SinobecBizOutputListCo" resultMap="BaseResultMapVo"  >
    select
    	bo.output_id, bo.receipt_code, bo.receipt_rid, bo.receipt_bid, bo.receipt_type, bo.receipt_status,
	    bo.mat_code, bo.unit_code, bo.bundle_code, bo.shipping_ref, bo.heat_code, bo.skid_code, bo.corp_code,
	    bo.item_numb, bo.lot_numb, bo.wh_code, bo.type_code, bo.bin_code, bo.stock_status, bo.stock_id, bo.is_delete,
	    bo.write_off, bo.create_time, bo.modify_time, bo.create_user_id, bo.modify_user_id, bo.receipt_unit_code,
	    bo.receipt_qty, bo.weight_unit_code, bo.weight_qty,bo.trailler_number,bo.vendor_code,bo.vendor_name,
	    bo.ext0, bo.ext1, bo.ext2,
	    bo.ext3, bo.ext4, bo.ext5,
	    bo.ext6, bo.ext7, bo.ext8,
	    bo.ext9, bo.ext10, bo.ext11,
	    bo.ext12, bo.ext13, bo.ext14,bo.ext15,
    	m.mat_name
	FROM
		sinobec_biz_output bo
	INNER JOIN dic_material m on bo.mat_code = m.mat_code
    where bo.is_delete=0 and bo.write_off=0
    <if test="receiptStatus != null" >
    	and bo.receipt_status=#{receiptStatus}
    </if>
    <if test="receiptCode != null and receiptCode != '' " >
      and  bo.receipt_code=#{receiptCode}
    </if>
    <if test="receiptType != null " >
      and  bo.receipt_type=#{receiptType}
    </if>
    <if test="corpCode != null and corpCode != ''">
      and bo.corp_code = #{corpCode ,jdbcType=VARCHAR}
    </if>
    <if test="shippingRef != null and shippingRef != ''">
      and bo.shipping_ref = #{shippingRef ,jdbcType=VARCHAR}
    </if>
    <if test="createStartTime != null and createStartTime != ''">
      and UNIX_TIMESTAMP(bo.create_time) <![CDATA[ >= ]]> UNIX_TIMESTAMP(#{createStartTime,jdbcType=VARCHAR})
    </if>
    <if test="createEndTime != null and createEndTime != ''">
      and UNIX_TIMESTAMP(bo.create_time) <![CDATA[ < ]]> UNIX_TIMESTAMP(DATE_ADD(#{createEndTime,jdbcType=VARCHAR}, INTERVAL 1 day))
    </if>
    <if test="whCode != null and whCode != '' " >
      and  bo.wh_code=#{whCode}
    </if>
  </select>

  <delete id="deleteByReceiptCode" >
    delete from sinobec_biz_output
    where receipt_code = #{receiptCode}
  </delete>

</mapper>
